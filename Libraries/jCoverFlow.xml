<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.04</doclet-version-NOT-library-version>
    <class>
        <name>anywheresoftware.giuseppe.salvi.coverflow.jCoverFlowWrapper</name>
        <shortname>JCoverFlow</shortname>
        <objectwrapper>javafx.scene.Group</objectwrapper>
        <owner>process</owner>
        <event>OnMouseClicked(Position As Int, Value As Object)</event>
        <event>OnLoadStart(Value As Boolean, Items As Object)</event>
        <event>OnLoadComplete(Value As Object)</event>
        <method>
            <name>Initialize</name>
            <comment>Initialize CoverFlow</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Show</name>
            <comment>Show CoverFlow</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Resample</name>
            <comment>Reprocess the CoverFlow</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ShowFromFolder2</name>
            <comment>Populate CoverFlow by choosing a dir and path</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Snapshot</name>
            <comment></comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
        </method>
        <method>
            <name>ShowFromFolder</name>
            <comment>Populate CoverFlow by choosing a folder and format</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>format</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ShowFromDirectoryChooser</name>
            <comment>Populate CoverFlow by choosing a folder</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>title</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RemoveNodeFromParent</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SetCacheFolder</name>
            <comment>Set your own Cache folder
 
 Example:
 
 CoverFlow.SetCacheFolder("C:\Users\YOUR USER NAME\Pictures","/JCoverFlow/data/cache/thumb")</comment>
            <returntype>void</returntype>
            <parameter>
                <name>dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>cache</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Reset</name>
            <comment>Reset CoverFlow</comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>ShowText</name>
            <returntype>java.lang.Boolean</returntype>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
            <comment>Get or Sets ScrollBar Visible</comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>StyleClasses</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScrollBarSize</name>
            <parameter>
                <name>size</name>
                <type>double</type>
            </parameter>
            <comment>Set ScrollBar size</comment>
        </property>
        <property>
            <name>BorderInsets</name>
            <parameter>
                <name>insets</name>
                <type>double</type>
            </parameter>
            <comment>Set Border Insets</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>double</returntype>
            <parameter>
                <name>w</name>
                <type>double</type>
            </parameter>
            <comment>Get or Sets CoverFlow Width</comment>
        </property>
        <property>
            <name>ScrollBarStyle</name>
            <parameter>
                <name>style</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Set ScrollBar Style
 
 Example:
 
 jCoverFlow.ScrollBarStyle = "-fx-base: #202020; -fx-background: #202020;"</comment>
        </property>
        <property>
            <name>Version</name>
            <returntype>java.lang.String</returntype>
            <comment>Return Author and Version of this library</comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>double</returntype>
            <parameter>
                <name>arg0</name>
                <type>double</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MouseCursor</name>
            <returntype>javafx.scene.Cursor</returntype>
            <parameter>
                <name>arg0</name>
                <type>javafx.scene.Cursor</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>BackGroundStyle</name>
            <parameter>
                <name>style</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Set BackGround Style
 
 Example:
 
 jCoverFlow.BackGroundStyle = "-fx-background-color: linear-gradient(to bottom, black 60%, #141414 60.1%, black 100%);"</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>double</returntype>
            <parameter>
                <name>h</name>
                <type>double</type>
            </parameter>
            <comment>Get or Sets CoverFlow Height</comment>
        </property>
        <property>
            <name>Spacing</name>
            <parameter>
                <name>spacing</name>
                <type>double</type>
            </parameter>
            <comment>Set Spacing between the items</comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>double</returntype>
            <parameter>
                <name>arg0</name>
                <type>double</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>BorderWidth</name>
            <parameter>
                <name>width</name>
                <type>double</type>
            </parameter>
            <comment>Set Border Width</comment>
        </property>
        <property>
            <name>ScrollMode</name>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
            <comment>Set Scroll Mode. It's already set in the normal mode.
 
  1 = Normal
  2 = Inverse</comment>
        </property>
        <property>
            <name>ItemsSize</name>
            <parameter>
                <name>w</name>
                <type>double</type>
            </parameter>
            <comment>Sets Items Width and Height</comment>
        </property>
        <property>
            <name>BorderVisible</name>
            <returntype>java.lang.Boolean</returntype>
            <parameter>
                <name>border</name>
                <type>boolean</type>
            </parameter>
            <comment>Get or Sets Border Visible</comment>
        </property>
        <property>
            <name>ScrollBarVisible</name>
            <returntype>java.lang.Boolean</returntype>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
            <comment>Get or Sets ScrollBar Visible</comment>
        </property>
        <property>
            <name>BorderColor</name>
            <parameter>
                <name>color</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Set Border Color</comment>
        </property>
        <property>
            <name>Length</name>
            <returntype>int</returntype>
            <comment>Return Items lenght</comment>
        </property>
        <property>
            <name>BorderRadius</name>
            <parameter>
                <name>radius</name>
                <type>double</type>
            </parameter>
            <comment>Set Border Radius</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>SCROLL_INVERSE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_NORMAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.giuseppe.salvi.coverflow.jCoverFlowWrapper.ImageAdapter</name>
        <owner>process</owner>
        <method>
            <name>getGenericListItemType</name>
            <comment></comment>
            <returntype>java.lang.reflect.Type</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.reflect.Type</type>
            </parameter>
        </method>
        <method>
            <name>put</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>remove</name>
            <comment></comment>
            <returntype>V</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>coerce</name>
            <comment></comment>
            <returntype>T</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.Class</type>
            </parameter>
        </method>
        <method>
            <name>get</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>equals</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>entrySet</name>
            <comment></comment>
            <returntype>java.util.Set</returntype>
        </method>
        <method>
            <name>getPropertyModel</name>
            <comment></comment>
            <returntype>javafx.beans.property.Property</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>hashCode</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>keySet</name>
            <comment></comment>
            <returntype>java.util.Set</returntype>
        </method>
        <method>
            <name>removeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>javafx.beans.InvalidationListener</type>
            </parameter>
        </method>
        <method>
            <name>addListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>javafx.beans.InvalidationListener</type>
            </parameter>
        </method>
        <method>
            <name>size</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>clear</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isEmpty</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getConstantValue</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Class</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>containsKey</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>getType</name>
            <comment></comment>
            <returntype>java.lang.Class</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>values</name>
            <comment></comment>
            <returntype>java.util.Collection</returntype>
        </method>
        <method>
            <name>getMapValueType</name>
            <comment></comment>
            <returntype>java.lang.Class</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.reflect.Type</type>
            </parameter>
        </method>
        <method>
            <name>getGenericMapValueType</name>
            <comment></comment>
            <returntype>java.lang.reflect.Type</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.reflect.Type</type>
            </parameter>
        </method>
        <method>
            <name>isDefined</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Class</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>java.lang.Class</type>
            </parameter>
        </method>
        <method>
            <name>getGenericType</name>
            <comment></comment>
            <returntype>java.lang.reflect.Type</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>containsValue</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>isReadOnly</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>putAll</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.util.Map</type>
            </parameter>
        </method>
        <method>
            <name>getListItemType</name>
            <comment></comment>
            <returntype>java.lang.Class</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.reflect.Type</type>
            </parameter>
        </method>
        <property>
            <name>Bean</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>PROPERTY_MODEL_SUFFIX</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>VALUE_OF_METHOD_NAME</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>GET_PREFIX</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>CHANGE_LISTENERS_SUFFIX</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>SET_PREFIX</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>IS_PREFIX</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
    </class>
    <version>1.6</version>
    <comment></comment>
    <author>GiuseppeSalvi</author>
</root>
