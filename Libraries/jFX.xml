<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.04</doclet-version-NOT-library-version>
    <class>
        <name>anywheresoftware.b4j.objects.WebViewWrapper</name>
        <shortname>WebView</shortname>
        <comment>WebView is an embedded browser.
LocationChanged event is raised whenever the current location changes.
PageFinished event is raised after the page is completely loaded.</comment>
        <objectwrapper>javafx.scene.web.WebView</objectwrapper>
        <owner>process</owner>
        <event>LocationChanged (Location As String)</event>
        <event>PageFinished (Url As String)</event>
        <event>MouseClicked (EventData As MouseEvent)</event>
        <event>MouseMoved (EventData As MouseEvent)</event>
        <event>MouseDragged (EventData As MouseEvent)</event>
        <event>MousePressed (EventData As MouseEvent)</event>
        <event>MouseReleased (EventData As MouseEvent)</event>
        <event>FocusChanged (HasFocus As Boolean)</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object and sets the subs that will handle the events.
Nodes added with the designer should NOT be initialized. These views are initialized when the layout is loaded.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>LoadUrl</name>
            <comment>Asynchronously loads the given url.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment>Requests the focus to be set on this node.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>LoadHtml</name>
            <comment>Asynchronously loads the given html string.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>HtmlString</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Snapshot</name>
            <comment>Captures the node appearance and returns the rendered image.</comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
        </method>
        <method>
            <name>RemoveNodeFromParent</name>
            <comment>Removes the node from its parent.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is enabled.</comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Top property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is visible.</comment>
        </property>
        <property>
            <name>MouseCursor</name>
            <returntype>javafx.scene.Cursor</returntype>
            <parameter>
                <name>c</name>
                <type>javafx.scene.Cursor</type>
            </parameter>
            <comment>Gets or sets the mouse cursor that will be used when the mouse is in the node's bounds.
Example:&lt;code&gt;
MainForm.RootPane.MouseCursor = fx.Cursors.HAND&lt;/code&gt;</comment>
        </property>
        <property>
            <name>StyleClasses</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the node's style classes.</comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node inline style.</comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Left property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the node's tag. This is a placeholder for any object you need to tie to the node.</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node id. Returns an empty string if the id was not set.</comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred height.</comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred width.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.TreeViewWrapper</name>
        <shortname>TreeView</shortname>
        <objectwrapper>javafx.scene.control.TreeView</objectwrapper>
        <owner>process</owner>
        <event>SelectedItemChanged(SelectedItem As TreeItem)</event>
        <event>Resize (Width As Double, Height As Double)</event>
        <event>MouseClicked (EventData As MouseEvent)</event>
        <event>MouseMoved (EventData As MouseEvent)</event>
        <event>MouseDragged (EventData As MouseEvent)</event>
        <event>MousePressed (EventData As MouseEvent)</event>
        <event>MouseReleased (EventData As MouseEvent)</event>
        <event>FocusChanged (HasFocus As Boolean)</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object and sets the subs that will handle the events.
Nodes added with the designer should NOT be initialized. These views are initialized when the layout is loaded.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment>Requests the focus to be set on this node.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetCheckBoxesMode</name>
            <comment>Shows a checkbox before each item in the TreeView.
Items should be CheckboxTreeItems.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Snapshot</name>
            <comment>Captures the node appearance and returns the rendered image.</comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
        </method>
        <method>
            <name>RemoveNodeFromParent</name>
            <comment>Removes the node from its parent.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Top</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Top property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is enabled.</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is visible.</comment>
        </property>
        <property>
            <name>MouseCursor</name>
            <returntype>javafx.scene.Cursor</returntype>
            <parameter>
                <name>c</name>
                <type>javafx.scene.Cursor</type>
            </parameter>
            <comment>Gets or sets the mouse cursor that will be used when the mouse is in the node's bounds.
Example:&lt;code&gt;
MainForm.RootPane.MouseCursor = fx.Cursors.HAND&lt;/code&gt;</comment>
        </property>
        <property>
            <name>StyleClasses</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the node's style classes.</comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node inline style.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>double</returntype>
            <comment>Gets the node height. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefHeight instead.</comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Left property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>TooltipText</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the tooltip text that will appear when the mouse hovers over the control.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the node's tag. This is a placeholder for any object you need to tie to the node.</comment>
        </property>
        <property>
            <name>Root</name>
            <returntype>anywheresoftware.b4j.objects.TreeViewWrapper.ConcreteTreeItemWrapper</returntype>
            <comment>Gets root item. This item is not visible.</comment>
        </property>
        <property>
            <name>ContextMenu</name>
            <returntype>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</returntype>
            <parameter>
                <name>c</name>
                <type>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</type>
            </parameter>
            <comment>Gets or sets the context menu that will appear when the user right clicks on the control.</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node id. Returns an empty string if the id was not set.</comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred height.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>double</returntype>
            <comment>Gets the node width. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefWidth instead.</comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred width.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.TreeViewWrapper.ConcreteTreeItemWrapper</name>
        <shortname>TreeItem</shortname>
        <objectwrapper>javafx.scene.control.TreeItem</objectwrapper>
        <owner>process</owner>
        <event>ExpandedChanged(Expanded As Boolean)</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes the TreeItem.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Text</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Parent</name>
            <returntype>anywheresoftware.b4j.objects.TreeViewWrapper.ConcreteTreeItemWrapper</returntype>
            <comment>Returns the TreeItem parent. Will return an uninitialized TreeItem if this is a root item.</comment>
        </property>
        <property>
            <name>Text</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the TreeItem text.</comment>
        </property>
        <property>
            <name>Image</name>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
            <parameter>
                <name>Image</name>
                <type>javafx.scene.image.Image</type>
            </parameter>
            <comment>Gets or sets the image that is displayed before the text.</comment>
        </property>
        <property>
            <name>Root</name>
            <returntype>boolean</returntype>
            <comment>Tests whether this TreeItem is a root item.</comment>
        </property>
        <property>
            <name>Children</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a list with the TreeItem children.</comment>
        </property>
        <property>
            <name>Expanded</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the tree item is expanded.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.TreeViewWrapper.CheckBoxTreeItemWrapper</name>
        <shortname>CheckboxTreeItem</shortname>
        <objectwrapper>javafx.scene.control.CheckBoxTreeItem</objectwrapper>
        <owner>process</owner>
        <event>CheckedChange(Checked As Boolean)</event>
        <event>ExpandedChanged(Expanded As Boolean)</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes the item. Make sure to call TreeView.ChangeToCheckBoxesMode.
Otherwise the checkboxes will not be visible.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Text</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Parent</name>
            <returntype>anywheresoftware.b4j.objects.TreeViewWrapper.ConcreteTreeItemWrapper</returntype>
            <comment>Returns the TreeItem parent. Will return an uninitialized TreeItem if this is a root item.</comment>
        </property>
        <property>
            <name>Text</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the TreeItem text.</comment>
        </property>
        <property>
            <name>Checked</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets the checked state.</comment>
        </property>
        <property>
            <name>Image</name>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
            <parameter>
                <name>Image</name>
                <type>javafx.scene.image.Image</type>
            </parameter>
            <comment>Gets or sets the image that is displayed before the text.</comment>
        </property>
        <property>
            <name>Root</name>
            <returntype>boolean</returntype>
            <comment>Tests whether this TreeItem is a root item.</comment>
        </property>
        <property>
            <name>Children</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a list with the TreeItem children.</comment>
        </property>
        <property>
            <name>Expanded</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the tree item is expanded.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.TextInputControlWrapper.TextFieldWrapper</name>
        <shortname>TextField</shortname>
        <comment>A single line editable text field.</comment>
        <objectwrapper>javafx.scene.control.TextField</objectwrapper>
        <owner>process</owner>
        <event>Action</event>
        <event>TextChanged (Old As String, New As String)</event>
        <event>MouseClicked (EventData As MouseEvent)</event>
        <event>FocusChanged (HasFocus As Boolean)</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object and sets the subs that will handle the events.
Nodes added with the designer should NOT be initialized. These views are initialized when the layout is loaded.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment>Requests the focus to be set on this node.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetSelection</name>
            <comment>Sets the selection.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>StartIndex</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>EndIndex</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SelectAll</name>
            <comment>Selects all the text.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Snapshot</name>
            <comment>Captures the node appearance and returns the rendered image.</comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>RemoveNodeFromParent</name>
            <comment>Removes the node from its parent.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Top</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Top property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is enabled.</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is visible.</comment>
        </property>
        <property>
            <name>StyleClasses</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the node's style classes.</comment>
        </property>
        <property>
            <name>MouseCursor</name>
            <returntype>javafx.scene.Cursor</returntype>
            <parameter>
                <name>c</name>
                <type>javafx.scene.Cursor</type>
            </parameter>
            <comment>Gets or sets the mouse cursor that will be used when the mouse is in the node's bounds.
Example:&lt;code&gt;
MainForm.RootPane.MouseCursor = fx.Cursors.HAND&lt;/code&gt;</comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node inline style.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>double</returntype>
            <comment>Gets the node height. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefHeight instead.</comment>
        </property>
        <property>
            <name>PromptText</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the prompt text. This text appears when there is no text set.</comment>
        </property>
        <property>
            <name>SelectionStart</name>
            <returntype>int</returntype>
            <comment>Returns the selection start index.</comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Left property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Editable</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the text control is editable.</comment>
        </property>
        <property>
            <name>Text</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the text.</comment>
        </property>
        <property>
            <name>SelectionEnd</name>
            <returntype>int</returntype>
            <comment>Return the selection end index.</comment>
        </property>
        <property>
            <name>TooltipText</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the tooltip text that will appear when the mouse hovers over the control.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the node's tag. This is a placeholder for any object you need to tie to the node.</comment>
        </property>
        <property>
            <name>ContextMenu</name>
            <returntype>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</returntype>
            <parameter>
                <name>c</name>
                <type>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</type>
            </parameter>
            <comment>Gets or sets the context menu that will appear when the user right clicks on the control.</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node id. Returns an empty string if the id was not set.</comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred height.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>double</returntype>
            <comment>Gets the node width. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefWidth instead.</comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred width.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.TextInputControlWrapper.TextAreaWrapper</name>
        <shortname>TextArea</shortname>
        <comment>Multiline editable text field.</comment>
        <objectwrapper>javafx.scene.control.TextArea</objectwrapper>
        <owner>process</owner>
        <event>TextChanged (Old As String, New As String)</event>
        <event>MouseClicked (EventData As MouseEvent)</event>
        <event>FocusChanged (HasFocus As Boolean)</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object and sets the subs that will handle the events.
Nodes added with the designer should NOT be initialized. These views are initialized when the layout is loaded.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment>Requests the focus to be set on this node.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetSelection</name>
            <comment>Sets the selection.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>StartIndex</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>EndIndex</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SelectAll</name>
            <comment>Selects all the text.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Snapshot</name>
            <comment>Captures the node appearance and returns the rendered image.</comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>RemoveNodeFromParent</name>
            <comment>Removes the node from its parent.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Top</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Top property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is enabled.</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is visible.</comment>
        </property>
        <property>
            <name>StyleClasses</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the node's style classes.</comment>
        </property>
        <property>
            <name>MouseCursor</name>
            <returntype>javafx.scene.Cursor</returntype>
            <parameter>
                <name>c</name>
                <type>javafx.scene.Cursor</type>
            </parameter>
            <comment>Gets or sets the mouse cursor that will be used when the mouse is in the node's bounds.
Example:&lt;code&gt;
MainForm.RootPane.MouseCursor = fx.Cursors.HAND&lt;/code&gt;</comment>
        </property>
        <property>
            <name>ScrollLeftPosition</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the horizontal left position.</comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node inline style.</comment>
        </property>
        <property>
            <name>ScrollTopPosition</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the vertical scroll top position.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>double</returntype>
            <comment>Gets the node height. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefHeight instead.</comment>
        </property>
        <property>
            <name>PromptText</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the prompt text. This text appears when there is no text set.</comment>
        </property>
        <property>
            <name>SelectionStart</name>
            <returntype>int</returntype>
            <comment>Returns the selection start index.</comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Left property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Editable</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the text control is editable.</comment>
        </property>
        <property>
            <name>Text</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the text.</comment>
        </property>
        <property>
            <name>SelectionEnd</name>
            <returntype>int</returntype>
            <comment>Return the selection end index.</comment>
        </property>
        <property>
            <name>TooltipText</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the tooltip text that will appear when the mouse hovers over the control.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the node's tag. This is a placeholder for any object you need to tie to the node.</comment>
        </property>
        <property>
            <name>WrapText</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the text will wrap if needed.</comment>
        </property>
        <property>
            <name>ContextMenu</name>
            <returntype>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</returntype>
            <parameter>
                <name>c</name>
                <type>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</type>
            </parameter>
            <comment>Gets or sets the context menu that will appear when the user right clicks on the control.</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node id. Returns an empty string if the id was not set.</comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred height.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>double</returntype>
            <comment>Gets the node width. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefWidth instead.</comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred width.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.TabPaneWrapper</name>
        <shortname>TabPane</shortname>
        <objectwrapper>javafx.scene.control.TabPane</objectwrapper>
        <owner>process</owner>
        <event>TabChanged (SelectedTab As TabPage)</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object and sets the subs that will handle the events.
Nodes added with the designer should NOT be initialized. These views are initialized when the layout is loaded.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment>Requests the focus to be set on this node.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Snapshot</name>
            <comment>Captures the node appearance and returns the rendered image.</comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
        </method>
        <method>
            <name>SetSide</name>
            <comment>Sets the tabs position. The possible values are: "TOP", "LEFT", "RIGHT", "BOTTOM".</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Side</name>
                <type EnumType="true">javafx.geometry.Side</type>
            </parameter>
        </method>
        <method>
            <name>RemoveNodeFromParent</name>
            <comment>Removes the node from its parent.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Top</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Top property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is enabled.</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is visible.</comment>
        </property>
        <property>
            <name>StyleClasses</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the node's style classes.</comment>
        </property>
        <property>
            <name>MouseCursor</name>
            <returntype>javafx.scene.Cursor</returntype>
            <parameter>
                <name>c</name>
                <type>javafx.scene.Cursor</type>
            </parameter>
            <comment>Gets or sets the mouse cursor that will be used when the mouse is in the node's bounds.
Example:&lt;code&gt;
MainForm.RootPane.MouseCursor = fx.Cursors.HAND&lt;/code&gt;</comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node inline style.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>double</returntype>
            <comment>Gets the node height. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefHeight instead.</comment>
        </property>
        <property>
            <name>SelectedItem</name>
            <returntype>anywheresoftware.b4j.objects.TabPaneWrapper.TabWrapper</returntype>
            <comment>Gets the selected tab page.</comment>
        </property>
        <property>
            <name>SelectedIndex</name>
            <returntype>int</returntype>
            <parameter>
                <name>i</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the selected index.</comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Left property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Tabs</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Gets a list with the TabPane tabs.</comment>
        </property>
        <property>
            <name>TooltipText</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the tooltip text that will appear when the mouse hovers over the control.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the node's tag. This is a placeholder for any object you need to tie to the node.</comment>
        </property>
        <property>
            <name>ContextMenu</name>
            <returntype>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</returntype>
            <parameter>
                <name>c</name>
                <type>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</type>
            </parameter>
            <comment>Gets or sets the context menu that will appear when the user right clicks on the control.</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node id. Returns an empty string if the id was not set.</comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred height.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>double</returntype>
            <comment>Gets the node width. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefWidth instead.</comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred width.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.TabPaneWrapper.TabWrapper</name>
        <shortname>TabPage</shortname>
        <objectwrapper>javafx.scene.control.Tab</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Text</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the tab text.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the tab's tag. This is a placeholder for any object you need to tie to the node.</comment>
        </property>
        <property>
            <name>Image</name>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
            <parameter>
                <name>Image</name>
                <type>javafx.scene.image.Image</type>
            </parameter>
            <comment>Gets or sets the image that is displayed in the tab.</comment>
        </property>
        <property>
            <name>ContextMenu</name>
            <returntype>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</returntype>
            <parameter>
                <name>c</name>
                <type>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</type>
            </parameter>
            <comment>Gets or sets the context menu that will appear when the user right clicks on the control.</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the tab id. Returns an empty string if the id was not set.</comment>
        </property>
        <property>
            <name>Content</name>
            <returntype>anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper</returntype>
            <parameter>
                <name>Pane</name>
                <type>javafx.scene.layout.Pane</type>
            </parameter>
            <comment>Gets or sets the tab content pane.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.TableViewWrapper</name>
        <shortname>TableView</shortname>
        <comment>A control that shows data in a table.
The table data is stored in a List. Each item in the list (which represents a row) is an array of objects. One object for each column.
Changing the data in the list will change the data in the table.
Set SingleCellSelection to True if you want to allow selection of single cells instead of rows.</comment>
        <objectwrapper>javafx.scene.control.TableView</objectwrapper>
        <owner>process</owner>
        <event>SelectedRowChanged(Index As Int, Row() As Object)</event>
        <event>SelectedCellChanged (RowIndex As Int, ColIndex As Int, Cell As Object)</event>
        <event>Resize (Width As Double, Height As Double)</event>
        <event>MouseClicked (EventData As MouseEvent)</event>
        <event>MouseMoved (EventData As MouseEvent)</event>
        <event>MouseDragged (EventData As MouseEvent)</event>
        <event>MousePressed (EventData As MouseEvent)</event>
        <event>MouseReleased (EventData As MouseEvent)</event>
        <event>FocusChanged (HasFocus As Boolean)</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object and sets the subs that will handle the events.
Nodes added with the designer should NOT be initialized. These views are initialized when the layout is loaded.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetColumnVisible</name>
            <comment>Gets whether the column is visible.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment>Requests the focus to be set on this node.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetColumnVisible</name>
            <comment>Sets whether the column is visible.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Visible</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetColumnSortable</name>
            <comment>Sets whether the column is sortable. Sortable means that the user can click on the header to sort it.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Sortable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>ScrollTo</name>
            <comment>Scrolls to the given row index.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetColumnHeader</name>
            <comment>Gets the column header.
Index - Column index (first column index is 0).</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Snapshot</name>
            <comment>Captures the node appearance and returns the rendered image.</comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
        </method>
        <method>
            <name>GetColumnWidth</name>
            <comment>Gets the column width.
Index - Column index (first column index is 0).</comment>
            <returntype>double</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetColumns</name>
            <comment>Sets the table columns.
Columns - A List (or array) with the columns titles.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Columns</name>
                <type>anywheresoftware.b4a.objects.collections.List</type>
            </parameter>
        </method>
        <method>
            <name>SelectCell</name>
            <comment>Selects a single cell. Make sure to first set SingleCellSelection to True.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Row</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Column</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetColumnWidth</name>
            <comment>Sets the column width.
Index - Column index (first column index is 0).</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>SetColumnHeader</name>
            <comment>Sets the column header.
 Index - Column index (first column index is 0).</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Header</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RemoveNodeFromParent</name>
            <comment>Removes the node from its parent.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Items</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <parameter>
                <name>list</name>
                <type>anywheresoftware.b4a.objects.collections.List</type>
            </parameter>
            <comment>Gets or sets the list that holds the table data.</comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Top property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is enabled.</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is visible.</comment>
        </property>
        <property>
            <name>StyleClasses</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the node's style classes.</comment>
        </property>
        <property>
            <name>MouseCursor</name>
            <returntype>javafx.scene.Cursor</returntype>
            <parameter>
                <name>c</name>
                <type>javafx.scene.Cursor</type>
            </parameter>
            <comment>Gets or sets the mouse cursor that will be used when the mouse is in the node's bounds.
Example:&lt;code&gt;
MainForm.RootPane.MouseCursor = fx.Cursors.HAND&lt;/code&gt;</comment>
        </property>
        <property>
            <name>ColumnsCount</name>
            <returntype>int</returntype>
            <comment>Returns the number of columns.</comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node inline style.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>double</returntype>
            <comment>Gets the node height. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefHeight instead.</comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Left property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>SelectedRowValues</name>
            <returntype>java.lang.Object[]</returntype>
            <parameter>
                <name>r</name>
                <type>java.lang.Object[]</type>
            </parameter>
            <comment>Gets the values of the selected row or sets the selected row based on the given values.</comment>
        </property>
        <property>
            <name>TooltipText</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the tooltip text that will appear when the mouse hovers over the control.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the node's tag. This is a placeholder for any object you need to tie to the node.</comment>
        </property>
        <property>
            <name>SingleCellSelection</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether single cell selection is enabled.</comment>
        </property>
        <property>
            <name>ContextMenu</name>
            <returntype>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</returntype>
            <parameter>
                <name>c</name>
                <type>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</type>
            </parameter>
            <comment>Gets or sets the context menu that will appear when the user right clicks on the control.</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node id. Returns an empty string if the id was not set.</comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred height.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>double</returntype>
            <comment>Gets the node width. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefWidth instead.</comment>
        </property>
        <property>
            <name>SelectedRow</name>
            <returntype>int</returntype>
            <parameter>
                <name>row</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the index of the selected row.</comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred width.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.SliderWrapper</name>
        <shortname>Slider</shortname>
        <comment>A slider control that allows the user to choose a value by dragging the "thumb".
The default minimum and maximum values are 0 and 100.</comment>
        <objectwrapper>javafx.scene.control.Slider</objectwrapper>
        <owner>process</owner>
        <event>ValueChange (Value As Double)</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object and sets the subs that will handle the events.
Nodes added with the designer should NOT be initialized. These views are initialized when the layout is loaded.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment>Requests the focus to be set on this node.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Snapshot</name>
            <comment>Captures the node appearance and returns the rendered image.</comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
        </method>
        <method>
            <name>RemoveNodeFromParent</name>
            <comment>Removes the node from its parent.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Top</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Top property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is enabled.</comment>
        </property>
        <property>
            <name>Value</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the slider value.</comment>
        </property>
        <property>
            <name>MinValue</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the minimum value. The default value is 0.</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is visible.</comment>
        </property>
        <property>
            <name>StyleClasses</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the node's style classes.</comment>
        </property>
        <property>
            <name>MouseCursor</name>
            <returntype>javafx.scene.Cursor</returntype>
            <parameter>
                <name>c</name>
                <type>javafx.scene.Cursor</type>
            </parameter>
            <comment>Gets or sets the mouse cursor that will be used when the mouse is in the node's bounds.
Example:&lt;code&gt;
MainForm.RootPane.MouseCursor = fx.Cursors.HAND&lt;/code&gt;</comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node inline style.</comment>
        </property>
        <property>
            <name>MaxValue</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the maximum value. The default value is 100.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>double</returntype>
            <comment>Gets the node height. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefHeight instead.</comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Left property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Vertical</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets the slider orientation. The default value is False (horizontal).</comment>
        </property>
        <property>
            <name>TooltipText</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the tooltip text that will appear when the mouse hovers over the control.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the node's tag. This is a placeholder for any object you need to tie to the node.</comment>
        </property>
        <property>
            <name>ContextMenu</name>
            <returntype>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</returntype>
            <parameter>
                <name>c</name>
                <type>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</type>
            </parameter>
            <comment>Gets or sets the context menu that will appear when the user right clicks on the control.</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node id. Returns an empty string if the id was not set.</comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred height.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>double</returntype>
            <comment>Gets the node width. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefWidth instead.</comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred width.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.ScrollPaneWrapper</name>
        <shortname>ScrollPane</shortname>
        <comment>ScrollPane is a scrollable container. The InnerNode will return the node that actually holds content node which is scrolled.
By default the inner node is an AnchorPane.
The Position parameter in VScrollChanged and HScrollChanged events is a value between 0 (minimum) to 1 (maximum).</comment>
        <objectwrapper>javafx.scene.control.ScrollPane</objectwrapper>
        <owner>process</owner>
        <event>VScrollChanged (Position As Double)</event>
        <event>HScrollChanged (Position As Double)</event>
        <event>Resize (Width As Double, Height As Double)</event>
        <event>MouseClicked (EventData As MouseEvent)</event>
        <event>MouseMoved (EventData As MouseEvent)</event>
        <event>MouseDragged (EventData As MouseEvent)</event>
        <event>MousePressed (EventData As MouseEvent)</event>
        <event>MouseReleased (EventData As MouseEvent)</event>
        <event>FocusChanged (HasFocus As Boolean)</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object and sets the subs that will handle the events.
Nodes added with the designer should NOT be initialized. These views are initialized when the layout is loaded.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment>Requests the focus to be set on this node.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Snapshot</name>
            <comment>Captures the node appearance and returns the rendered image.</comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
        </method>
        <method>
            <name>SetHScrollVisibility</name>
            <comment>Sets the horizontal scroll bar visibility.
Policy - One of the following string values: NEVER, ALWAYS, AS_NEEDED.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Policy</name>
                <type EnumType="true">javafx.scene.control.ScrollPane.ScrollBarPolicy</type>
            </parameter>
        </method>
        <method>
            <name>SetVScrollVisibility</name>
            <comment>Sets the vertical scroll bar visibility.
Policy - One of the following string values: NEVER, ALWAYS, AS_NEEDED.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Policy</name>
                <type EnumType="true">javafx.scene.control.ScrollPane.ScrollBarPolicy</type>
            </parameter>
        </method>
        <method>
            <name>RemoveNodeFromParent</name>
            <comment>Removes the node from its parent.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Top</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Top property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is enabled.</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is visible.</comment>
        </property>
        <property>
            <name>FitToWidth</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the inner node should be resized to match the ScrollPane width.
This property only affects resizable nodes.</comment>
        </property>
        <property>
            <name>StyleClasses</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the node's style classes.</comment>
        </property>
        <property>
            <name>MouseCursor</name>
            <returntype>javafx.scene.Cursor</returntype>
            <parameter>
                <name>c</name>
                <type>javafx.scene.Cursor</type>
            </parameter>
            <comment>Gets or sets the mouse cursor that will be used when the mouse is in the node's bounds.
Example:&lt;code&gt;
MainForm.RootPane.MouseCursor = fx.Cursors.HAND&lt;/code&gt;</comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node inline style.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>double</returntype>
            <comment>Gets the node height. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefHeight instead.</comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Left property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Pannable</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the ScrollPane can be scrolled using the mouse.</comment>
        </property>
        <property>
            <name>TooltipText</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the tooltip text that will appear when the mouse hovers over the control.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the node's tag. This is a placeholder for any object you need to tie to the node.</comment>
        </property>
        <property>
            <name>FitToHeight</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the inner node should be resized to match the ScrollPane height.
This property only affects resizable nodes.</comment>
        </property>
        <property>
            <name>ContextMenu</name>
            <returntype>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</returntype>
            <parameter>
                <name>c</name>
                <type>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</type>
            </parameter>
            <comment>Gets or sets the context menu that will appear when the user right clicks on the control.</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node id. Returns an empty string if the id was not set.</comment>
        </property>
        <property>
            <name>InnerNode</name>
            <returntype>anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper</returntype>
            <comment>Gets the ScrollPane inner node. This will usually be an AnchorPane.</comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred height.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>double</returntype>
            <comment>Gets the node width. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefWidth instead.</comment>
        </property>
        <property>
            <name>VPosition</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the vertical scroll position. Value between 0 to 1.</comment>
        </property>
        <property>
            <name>HPosition</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the horizontal scroll position. Value between 0 to 1.</comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred width.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.ProgressIndicatorWrapper</name>
        <shortname>ProgressIndicator</shortname>
        <comment>A circular progress indicator. A progress value of -1 means that the indicator is in indeterminate mode.</comment>
        <objectwrapper>javafx.scene.control.ProgressIndicator</objectwrapper>
        <owner>process</owner>
        <event>Resize (Width As Double, Height As Double)</event>
        <event>MouseClicked (EventData As MouseEvent)</event>
        <event>MouseMoved (EventData As MouseEvent)</event>
        <event>MouseDragged (EventData As MouseEvent)</event>
        <event>MousePressed (EventData As MouseEvent)</event>
        <event>MouseReleased (EventData As MouseEvent)</event>
        <event>FocusChanged (HasFocus As Boolean)</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object and sets the subs that will handle the events.
Nodes added with the designer should NOT be initialized. These views are initialized when the layout is loaded.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment>Requests the focus to be set on this node.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Snapshot</name>
            <comment>Captures the node appearance and returns the rendered image.</comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
        </method>
        <method>
            <name>RemoveNodeFromParent</name>
            <comment>Removes the node from its parent.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Top</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Top property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is enabled.</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is visible.</comment>
        </property>
        <property>
            <name>MouseCursor</name>
            <returntype>javafx.scene.Cursor</returntype>
            <parameter>
                <name>c</name>
                <type>javafx.scene.Cursor</type>
            </parameter>
            <comment>Gets or sets the mouse cursor that will be used when the mouse is in the node's bounds.
Example:&lt;code&gt;
MainForm.RootPane.MouseCursor = fx.Cursors.HAND&lt;/code&gt;</comment>
        </property>
        <property>
            <name>StyleClasses</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the node's style classes.</comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node inline style.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>double</returntype>
            <comment>Gets the node height. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefHeight instead.</comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Left property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Progress</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the progress. The value should be between 0 to 1. A value of -1 means that the indicator is in indeterminate mode.</comment>
        </property>
        <property>
            <name>TooltipText</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the tooltip text that will appear when the mouse hovers over the control.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the node's tag. This is a placeholder for any object you need to tie to the node.</comment>
        </property>
        <property>
            <name>ContextMenu</name>
            <returntype>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</returntype>
            <parameter>
                <name>c</name>
                <type>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</type>
            </parameter>
            <comment>Gets or sets the context menu that will appear when the user right clicks on the control.</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node id. Returns an empty string if the id was not set.</comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred height.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>double</returntype>
            <comment>Gets the node width. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefWidth instead.</comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred width.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.ProgressIndicatorWrapper.ProgressBarWrapper</name>
        <shortname>ProgressBar</shortname>
        <comment>A horizontal progress bar. A progress value of -1 means that the indicator is in indeterminate mode.</comment>
        <objectwrapper>javafx.scene.control.ProgressBar</objectwrapper>
        <owner>process</owner>
        <event>Resize (Width As Double, Height As Double)</event>
        <event>MouseClicked (EventData As MouseEvent)</event>
        <event>MouseMoved (EventData As MouseEvent)</event>
        <event>MouseDragged (EventData As MouseEvent)</event>
        <event>MousePressed (EventData As MouseEvent)</event>
        <event>MouseReleased (EventData As MouseEvent)</event>
        <event>FocusChanged (HasFocus As Boolean)</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object and sets the subs that will handle the events.
Nodes added with the designer should NOT be initialized. These views are initialized when the layout is loaded.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment>Requests the focus to be set on this node.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Snapshot</name>
            <comment>Captures the node appearance and returns the rendered image.</comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
        </method>
        <method>
            <name>RemoveNodeFromParent</name>
            <comment>Removes the node from its parent.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Top</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Top property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is enabled.</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is visible.</comment>
        </property>
        <property>
            <name>MouseCursor</name>
            <returntype>javafx.scene.Cursor</returntype>
            <parameter>
                <name>c</name>
                <type>javafx.scene.Cursor</type>
            </parameter>
            <comment>Gets or sets the mouse cursor that will be used when the mouse is in the node's bounds.
Example:&lt;code&gt;
MainForm.RootPane.MouseCursor = fx.Cursors.HAND&lt;/code&gt;</comment>
        </property>
        <property>
            <name>StyleClasses</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the node's style classes.</comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node inline style.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>double</returntype>
            <comment>Gets the node height. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefHeight instead.</comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Left property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Progress</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the progress. The value should be between 0 to 1. A value of -1 means that the indicator is in indeterminate mode.</comment>
        </property>
        <property>
            <name>TooltipText</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the tooltip text that will appear when the mouse hovers over the control.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the node's tag. This is a placeholder for any object you need to tie to the node.</comment>
        </property>
        <property>
            <name>ContextMenu</name>
            <returntype>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</returntype>
            <parameter>
                <name>c</name>
                <type>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</type>
            </parameter>
            <comment>Gets or sets the context menu that will appear when the user right clicks on the control.</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node id. Returns an empty string if the id was not set.</comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred height.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>double</returntype>
            <comment>Gets the node width. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefWidth instead.</comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred width.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper</name>
        <shortname>Pane</shortname>
        <comment>Pane is an object that can hold any type of Pane.</comment>
        <objectwrapper>javafx.scene.layout.Pane</objectwrapper>
        <owner>process</owner>
        <event>Resize (Width As Double, Height As Double)</event>
        <event>MouseClicked (EventData As MouseEvent)</event>
        <event>MouseMoved (EventData As MouseEvent)</event>
        <event>MouseDragged (EventData As MouseEvent)</event>
        <event>MousePressed (EventData As MouseEvent)</event>
        <event>MouseReleased (EventData As MouseEvent)</event>
        <event>FocusChanged (HasFocus As Boolean)</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object and sets the subs that will handle the events.
Nodes added with the designer should NOT be initialized. These views are initialized when the layout is loaded.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment>Requests the focus to be set on this node.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>GetAllViewsRecursive</name>
            <comment>Returns an iterator that iterates over all the child nodes including nodes that were added to other child nodes.
Example:&lt;code&gt;
For Each n As Node In MainForm.RootPane.GetAllViewsRecursive

Next
&lt;/code&gt;</comment>
            <returntype>anywheresoftware.b4a.BA.IterableList</returntype>
        </method>
        <method>
            <name>GetNode</name>
            <comment>Returns the node at the given index.</comment>
            <returntype>anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>RemoveNodeAt</name>
            <comment>Removes the node at the specified index.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Snapshot</name>
            <comment>Captures the node appearance and returns the rendered image.</comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
        </method>
        <method>
            <name>AddNode</name>
            <comment>Adds a Node to this pane.
Node - The node to add.
Left - The x coordinate of the top-left corner.
Top - The y coordinate of the top-left corner.
Width - The node's width. Setting this value to -1 means that the size will be calculated automatically.
Height - The node's height. Setting this value to -1 means that the size will be calculated automatically.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Node</name>
                <type>javafx.scene.Node</type>
            </parameter>
            <parameter>
                <name>Left</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Top</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>InsertNode</name>
            <comment>Inserts a node at the specified index.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Node</name>
                <type>javafx.scene.Node</type>
            </parameter>
            <parameter>
                <name>Left</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Top</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name RaisesSynchronousEvents="true">LoadLayout</name>
            <comment>Loads a FXML layout file.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>tba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>LayoutFile</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RemoveNodeFromParent</name>
            <comment>Removes the node from its parent.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>RemoveAllNodes</name>
            <comment>Removes all child nodes.</comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>Top</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Top property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is enabled.</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is visible.</comment>
        </property>
        <property>
            <name>MouseCursor</name>
            <returntype>javafx.scene.Cursor</returntype>
            <parameter>
                <name>c</name>
                <type>javafx.scene.Cursor</type>
            </parameter>
            <comment>Gets or sets the mouse cursor that will be used when the mouse is in the node's bounds.
Example:&lt;code&gt;
MainForm.RootPane.MouseCursor = fx.Cursors.HAND&lt;/code&gt;</comment>
        </property>
        <property>
            <name>StyleClasses</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the node's style classes.</comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node inline style.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>double</returntype>
            <comment>Gets the pane height. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefHeight instead.</comment>
        </property>
        <property>
            <name>NumberOfNodes</name>
            <returntype>int</returntype>
            <comment>Gets the number of child nodes.</comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Left property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the node's tag. This is a placeholder for any object you need to tie to the node.</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node id. Returns an empty string if the id was not set.</comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the pane preferred height.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>double</returntype>
            <comment>Gets the pane width. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefWidth instead.</comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the pane preferred width.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.PaneWrapper.AnchorPaneWrapper</name>
        <shortname>AnchorPane</shortname>
        <comment>A pane with an anchoring feature. Child views can be anchored to one or more of the pane boundaries.
The anchored distances will not change when the parent is resized.</comment>
        <objectwrapper>javafx.scene.layout.AnchorPane</objectwrapper>
        <owner>process</owner>
        <event>Resize (Width As Double, Height As Double)</event>
        <event>MouseClicked (EventData As MouseEvent)</event>
        <event>MouseMoved (EventData As MouseEvent)</event>
        <event>MouseDragged (EventData As MouseEvent)</event>
        <event>MousePressed (EventData As MouseEvent)</event>
        <event>MouseReleased (EventData As MouseEvent)</event>
        <event>FocusChanged (HasFocus As Boolean)</event>
        <method>
            <name>RequestFocus</name>
            <comment>Requests the focus to be set on this node.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>GetNode</name>
            <comment>Returns the node at the given index.</comment>
            <returntype>anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>RemoveNodeAt</name>
            <comment>Removes the node at the specified index.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Snapshot</name>
            <comment>Captures the node appearance and returns the rendered image.</comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
        </method>
        <method>
            <name>AddNode</name>
            <comment>Adds a Node to this pane.
Node - The node to add.
Left - The x coordinate of the top-left corner.
Top - The y coordinate of the top-left corner.
Width - The node's width. Setting this value to -1 means that the size will be calculated automatically.
Height - The node's height. Setting this value to -1 means that the size will be calculated automatically.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Node</name>
                <type>javafx.scene.Node</type>
            </parameter>
            <parameter>
                <name>Left</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Top</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>InsertNode</name>
            <comment>Inserts a node at the specified index.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Node</name>
                <type>javafx.scene.Node</type>
            </parameter>
            <parameter>
                <name>Left</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Top</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>SetBottomAnchor</name>
            <comment>Sets the bottom anchor constraint (distance from the node bottom edge to the container edge). Pass -1 to clear this constraint.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Child</name>
                <type>javafx.scene.Node</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>SetTopAnchor</name>
            <comment>Sets the top anchor constraint (distance from the node top edge to the container edge). Pass -1 to clear this constraint.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Child</name>
                <type>javafx.scene.Node</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>GetBottomAnchor</name>
            <comment>Gets the bottom anchor constraint or -1 if not set.</comment>
            <returntype>double</returntype>
            <parameter>
                <name>Child</name>
                <type>javafx.scene.Node</type>
            </parameter>
        </method>
        <method>
            <name>SetAnchors</name>
            <comment>Sets the child anchors. A value of -1 means that an anchor will not be set.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Child</name>
                <type>javafx.scene.Node</type>
            </parameter>
            <parameter>
                <name>Left</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Top</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Right</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Bottom</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>GetRightAnchor</name>
            <comment>Gets the right anchor constraint or -1 if not set.</comment>
            <returntype>double</returntype>
            <parameter>
                <name>Child</name>
                <type>javafx.scene.Node</type>
            </parameter>
        </method>
        <method>
            <name>GetTopAnchor</name>
            <comment>Gets the top anchor constraint or -1 if not set.</comment>
            <returntype>double</returntype>
            <parameter>
                <name>Child</name>
                <type>javafx.scene.Node</type>
            </parameter>
        </method>
        <method>
            <name>GetLeftAnchor</name>
            <comment>Gets the left anchor constraint or -1 if not set.</comment>
            <returntype>double</returntype>
            <parameter>
                <name>Child</name>
                <type>javafx.scene.Node</type>
            </parameter>
        </method>
        <method>
            <name>RemoveNodeFromParent</name>
            <comment>Removes the node from its parent.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object and sets the subs that will handle the events.
Nodes added with the designer should NOT be initialized. These views are initialized when the layout is loaded.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetRightAnchor</name>
            <comment>Sets the right anchor constraint (distance from the node right edge to the container edge). Pass -1 to clear this constraint.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Child</name>
                <type>javafx.scene.Node</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>GetAllViewsRecursive</name>
            <comment>Returns an iterator that iterates over all the child nodes including nodes that were added to other child nodes.
Example:&lt;code&gt;
For Each n As Node In MainForm.RootPane.GetAllViewsRecursive

Next
&lt;/code&gt;</comment>
            <returntype>anywheresoftware.b4a.BA.IterableList</returntype>
        </method>
        <method>
            <name>FillVertically</name>
            <comment>A utility method that anchors the child node top and bottom distances.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Child</name>
                <type>javafx.scene.Node</type>
            </parameter>
            <parameter>
                <name>DistanceFromTop</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>DistanceFromBottom</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>FillHorizontally</name>
            <comment>A utility method that anchors the child node left and right distances.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Child</name>
                <type>javafx.scene.Node</type>
            </parameter>
            <parameter>
                <name>DistanceFromLeft</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>DistanceFromRight</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>SetLeftAnchor</name>
            <comment>Sets the left anchor constraint (distance from the node left edge to the container edge). Pass -1 to clear this constraint.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Child</name>
                <type>javafx.scene.Node</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name RaisesSynchronousEvents="true">LoadLayout</name>
            <comment>Loads a FXML layout file.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>tba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>LayoutFile</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RemoveAllNodes</name>
            <comment>Removes all child nodes.</comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>Top</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Top property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is enabled.</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is visible.</comment>
        </property>
        <property>
            <name>MouseCursor</name>
            <returntype>javafx.scene.Cursor</returntype>
            <parameter>
                <name>c</name>
                <type>javafx.scene.Cursor</type>
            </parameter>
            <comment>Gets or sets the mouse cursor that will be used when the mouse is in the node's bounds.
Example:&lt;code&gt;
MainForm.RootPane.MouseCursor = fx.Cursors.HAND&lt;/code&gt;</comment>
        </property>
        <property>
            <name>StyleClasses</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the node's style classes.</comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node inline style.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>double</returntype>
            <comment>Gets the pane height. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefHeight instead.</comment>
        </property>
        <property>
            <name>NumberOfNodes</name>
            <returntype>int</returntype>
            <comment>Gets the number of child nodes.</comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Left property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the node's tag. This is a placeholder for any object you need to tie to the node.</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node id. Returns an empty string if the id was not set.</comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the pane preferred height.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>double</returntype>
            <comment>Gets the pane width. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefWidth instead.</comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the pane preferred width.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper</name>
        <shortname>Node</shortname>
        <comment>A special type that can hold any type of node.</comment>
        <objectwrapper>javafx.scene.Node</objectwrapper>
        <owner>process</owner>
        <event>MouseClicked (EventData As MouseEvent)</event>
        <event>MouseMoved (EventData As MouseEvent)</event>
        <event>MouseDragged (EventData As MouseEvent)</event>
        <event>MousePressed (EventData As MouseEvent)</event>
        <event>MouseReleased (EventData As MouseEvent)</event>
        <event>FocusChanged (HasFocus As Boolean)</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object and sets the subs that will handle the events.
Nodes added with the designer should NOT be initialized. These views are initialized when the layout is loaded.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment>Requests the focus to be set on this node.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Snapshot</name>
            <comment>Captures the node appearance and returns the rendered image.</comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
        </method>
        <method>
            <name>RemoveNodeFromParent</name>
            <comment>Removes the node from its parent.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Top</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Top property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is enabled.</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is visible.</comment>
        </property>
        <property>
            <name>StyleClasses</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the node's style classes.</comment>
        </property>
        <property>
            <name>MouseCursor</name>
            <returntype>javafx.scene.Cursor</returntype>
            <parameter>
                <name>c</name>
                <type>javafx.scene.Cursor</type>
            </parameter>
            <comment>Gets or sets the mouse cursor that will be used when the mouse is in the node's bounds.
Example:&lt;code&gt;
MainForm.RootPane.MouseCursor = fx.Cursors.HAND&lt;/code&gt;</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the node's tag. This is a placeholder for any object you need to tie to the node.</comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node inline style.</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node id. Returns an empty string if the id was not set.</comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Left property of the node (related to its parent).</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.NodeWrapper.ConcreteControlWrapper</name>
        <shortname>Control</shortname>
        <comment>A special type that can hold any type of control object.</comment>
        <objectwrapper>javafx.scene.control.Control</objectwrapper>
        <owner>process</owner>
        <event>Resize (Width As Double, Height As Double)</event>
        <event>MouseClicked (EventData As MouseEvent)</event>
        <event>MouseMoved (EventData As MouseEvent)</event>
        <event>MouseDragged (EventData As MouseEvent)</event>
        <event>MousePressed (EventData As MouseEvent)</event>
        <event>MouseReleased (EventData As MouseEvent)</event>
        <event>FocusChanged (HasFocus As Boolean)</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object and sets the subs that will handle the events.
Nodes added with the designer should NOT be initialized. These views are initialized when the layout is loaded.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment>Requests the focus to be set on this node.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Snapshot</name>
            <comment>Captures the node appearance and returns the rendered image.</comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
        </method>
        <method>
            <name>RemoveNodeFromParent</name>
            <comment>Removes the node from its parent.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Top</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Top property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is enabled.</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is visible.</comment>
        </property>
        <property>
            <name>MouseCursor</name>
            <returntype>javafx.scene.Cursor</returntype>
            <parameter>
                <name>c</name>
                <type>javafx.scene.Cursor</type>
            </parameter>
            <comment>Gets or sets the mouse cursor that will be used when the mouse is in the node's bounds.
Example:&lt;code&gt;
MainForm.RootPane.MouseCursor = fx.Cursors.HAND&lt;/code&gt;</comment>
        </property>
        <property>
            <name>StyleClasses</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the node's style classes.</comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node inline style.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>double</returntype>
            <comment>Gets the node height. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefHeight instead.</comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Left property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>TooltipText</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the tooltip text that will appear when the mouse hovers over the control.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the node's tag. This is a placeholder for any object you need to tie to the node.</comment>
        </property>
        <property>
            <name>ContextMenu</name>
            <returntype>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</returntype>
            <parameter>
                <name>c</name>
                <type>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</type>
            </parameter>
            <comment>Gets or sets the context menu that will appear when the user right clicks on the control.</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node id. Returns an empty string if the id was not set.</comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred height.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>double</returntype>
            <comment>Gets the node width. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefWidth instead.</comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred width.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.NodeWrapper.MouseEventWrapper</name>
        <shortname>MouseEvent</shortname>
        <comment>Holds the information related to the current mouse event.</comment>
        <objectwrapper>javafx.scene.input.MouseEvent</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Consume</name>
            <comment>Consumes the current event and prevent it from being handled by the nodes parent.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>MiddleButtonPressed</name>
            <returntype>boolean</returntype>
            <comment>Returns true if the primary button was responsible for raising the current click event.</comment>
        </property>
        <property>
            <name>PrimaryButtonPressed</name>
            <returntype>boolean</returntype>
            <comment>Returns true if the primary button was responsible for raising the current click event.</comment>
        </property>
        <property>
            <name>ClickCount</name>
            <returntype>int</returntype>
            <comment>Returns the number of clicks associated with this event.</comment>
        </property>
        <property>
            <name>SecondaryButtonDown</name>
            <returntype>boolean</returntype>
            <comment>Returns true if the secondary button is currently down.</comment>
        </property>
        <property>
            <name>PrimaryButtonDown</name>
            <returntype>boolean</returntype>
            <comment>Returns true if the primary button is currently down.</comment>
        </property>
        <property>
            <name>SecondaryButtonPressed</name>
            <returntype>boolean</returntype>
            <comment>Returns true if the secondary button was responsible for raising the current click event.</comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>double</returntype>
            <comment>Returns the Y coordinate related to the node bounds.</comment>
        </property>
        <property>
            <name>X</name>
            <returntype>double</returntype>
            <comment>Returns the X coordinate related to the node bounds.</comment>
        </property>
        <property>
            <name>MiddleButtonDown</name>
            <returntype>boolean</returntype>
            <comment>Returns true if the middle button is currently down.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.NodeWrapper.ConcreteEventWrapper</name>
        <shortname>Event</shortname>
        <objectwrapper>javafx.event.Event</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Consume</name>
            <comment>Consumes the current event and prevent it from being handled by the nodes parent.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper</name>
        <shortname>Menu</shortname>
        <comment>Menu holds a List of MenuItems. A Menu can also hold other Menu objects.</comment>
        <objectwrapper>javafx.scene.control.Menu</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Text</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the menu text.</comment>
        </property>
        <property>
            <name>MenuItems</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the child items. You can modify this list and add new items.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper</name>
        <shortname>MenuItem</shortname>
        <objectwrapper>javafx.scene.control.MenuItem</objectwrapper>
        <owner>process</owner>
        <event>Action</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes a menu item with the given text.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the menu item is enabled.</comment>
        </property>
        <property>
            <name>Text</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the menu text.</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>v</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the menu item is visible.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the tag object tied to this menu item.</comment>
        </property>
        <property>
            <name>Image</name>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
            <parameter>
                <name>Image</name>
                <type>javafx.scene.image.Image</type>
            </parameter>
            <comment>Gets or sets the image that is displayed before the text.
The image size is typically 16x16.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.MenuItemWrapper.CheckMenuItemWrapper</name>
        <shortname>CheckMenuItem</shortname>
        <comment>A checked menu item.</comment>
        <objectwrapper>javafx.scene.control.CheckMenuItem</objectwrapper>
        <owner>process</owner>
        <event>SelectedChange (Selected As Boolean)</event>
        <event>Action</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes a menu item with the given text.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the menu item is enabled.</comment>
        </property>
        <property>
            <name>Text</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the menu text.</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>v</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the menu item is visible.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the tag object tied to this menu item.</comment>
        </property>
        <property>
            <name>Image</name>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
            <parameter>
                <name>Image</name>
                <type>javafx.scene.image.Image</type>
            </parameter>
            <comment>Gets or sets the image that is displayed before the text.
The image size is typically 16x16.</comment>
        </property>
        <property>
            <name>Selected</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the menu item is checked.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.MenuItemWrapper.MenuBarWrapper</name>
        <shortname>MenuBar</shortname>
        <comment>A bar that holds Menus.</comment>
        <objectwrapper>javafx.scene.control.MenuBar</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object and sets the subs that will handle the events.
Nodes added with the designer should NOT be initialized. These views are initialized when the layout is loaded.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment>Requests the focus to be set on this node.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Snapshot</name>
            <comment>Captures the node appearance and returns the rendered image.</comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
        </method>
        <method>
            <name>RemoveNodeFromParent</name>
            <comment>Removes the node from its parent.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Top</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Top property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is enabled.</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is visible.</comment>
        </property>
        <property>
            <name>MouseCursor</name>
            <returntype>javafx.scene.Cursor</returntype>
            <parameter>
                <name>c</name>
                <type>javafx.scene.Cursor</type>
            </parameter>
            <comment>Gets or sets the mouse cursor that will be used when the mouse is in the node's bounds.
Example:&lt;code&gt;
MainForm.RootPane.MouseCursor = fx.Cursors.HAND&lt;/code&gt;</comment>
        </property>
        <property>
            <name>StyleClasses</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the node's style classes.</comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node inline style.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>double</returntype>
            <comment>Gets the node height. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefHeight instead.</comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Left property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>TooltipText</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the tooltip text that will appear when the mouse hovers over the control.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the node's tag. This is a placeholder for any object you need to tie to the node.</comment>
        </property>
        <property>
            <name>ContextMenu</name>
            <returntype>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</returntype>
            <parameter>
                <name>c</name>
                <type>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</type>
            </parameter>
            <comment>Gets or sets the context menu that will appear when the user right clicks on the control.</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node id. Returns an empty string if the id was not set.</comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred height.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>double</returntype>
            <comment>Gets the node width. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefWidth instead.</comment>
        </property>
        <property>
            <name>Menus</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the Menus.</comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred width.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</name>
        <shortname>ContextMenu</shortname>
        <comment>A special Menu that is tied to a control and appears when the user "right clicks" on the control.</comment>
        <objectwrapper>javafx.scene.control.ContextMenu</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>MenuItems</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the menu items.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.MediaPlayerWrapper</name>
        <shortname>MediaPlayer</shortname>
        <comment>MediaPlayer allows you to play audio media files.
The file is set once when you MediaPlayer is initialized.
Note that wav files in the assets folder will not work in Release mode.
The Complete event is raised when the playback reaches the end of the media. The player is still consider playing.
You can restart playback by setting the position to 0.</comment>
        <objectwrapper>javafx.scene.media.MediaPlayer</objectwrapper>
        <owner>process</owner>
        <event>Complete</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object, sets the subs that will handle the events and loads the media resource.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>MediaUri</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Play</name>
            <comment>Starts (or resumes) playing the media file.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Pause</name>
            <comment>Pauses the playback.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Stop</name>
            <comment>Stops the playback. Calling Play will start from the beginning.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Volume</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the volume (between 0 to 1).</comment>
        </property>
        <property>
            <name>CycleCount</name>
            <returntype>int</returntype>
            <parameter>
                <name>i</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the number of times the playback will repeat. The default value is 1.
Setting this value to -1 means that the playback will repeat indefinitely.</comment>
        </property>
        <property>
            <name>Duration</name>
            <returntype>double</returntype>
            <comment>Gets the total duration, measured in milliseconds.</comment>
        </property>
        <property>
            <name>Position</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the playback position, measured in milliseconds.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.ListViewWrapper</name>
        <shortname>ListView</shortname>
        <comment>A control that shows a list of items.
ListView supports multiple selection.
ListView.Items returns a List with the items. This list can be modified.
SelectedIndexChanged event is raised when the selected index changes. A value of -1 means that there is no selection.</comment>
        <objectwrapper>javafx.scene.control.ListView</objectwrapper>
        <owner>process</owner>
        <event>SelectedIndexChanged(Index As Int)</event>
        <event>Resize (Width As Double, Height As Double)</event>
        <event>MouseClicked (EventData As MouseEvent)</event>
        <event>MouseMoved (EventData As MouseEvent)</event>
        <event>MouseDragged (EventData As MouseEvent)</event>
        <event>MousePressed (EventData As MouseEvent)</event>
        <event>MouseReleased (EventData As MouseEvent)</event>
        <event>FocusChanged (HasFocus As Boolean)</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object and sets the subs that will handle the events.
Nodes added with the designer should NOT be initialized. These views are initialized when the layout is loaded.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment>Requests the focus to be set on this node.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ScrollTo</name>
            <comment>Scrolls the list to the specified index.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetSelectedIndices</name>
            <comment>Returns a List with the selected indices.</comment>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
        </method>
        <method>
            <name>SetSelectedIndices</name>
            <comment>Sets the selected indices.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Indices</name>
                <type>anywheresoftware.b4a.objects.collections.List</type>
            </parameter>
        </method>
        <method>
            <name>Snapshot</name>
            <comment>Captures the node appearance and returns the rendered image.</comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
        </method>
        <method>
            <name>RemoveNodeFromParent</name>
            <comment>Removes the node from its parent.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Items</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the ListView items. You can add or remove items from this list.
If the item added is a Node (any type of Node) then the Node will be used to visualize the item.</comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Top property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>MultipleSelection</name>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Sets whether multiple selection is enabled.</comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is enabled.</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is visible.</comment>
        </property>
        <property>
            <name>StyleClasses</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the node's style classes.</comment>
        </property>
        <property>
            <name>MouseCursor</name>
            <returntype>javafx.scene.Cursor</returntype>
            <parameter>
                <name>c</name>
                <type>javafx.scene.Cursor</type>
            </parameter>
            <comment>Gets or sets the mouse cursor that will be used when the mouse is in the node's bounds.
Example:&lt;code&gt;
MainForm.RootPane.MouseCursor = fx.Cursors.HAND&lt;/code&gt;</comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node inline style.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>double</returntype>
            <comment>Gets the node height. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefHeight instead.</comment>
        </property>
        <property>
            <name>SelectedItem</name>
            <returntype>java.lang.Object</returntype>
            <comment>Gets the selected item.</comment>
        </property>
        <property>
            <name>SelectedIndex</name>
            <returntype>int</returntype>
            <parameter>
                <name>i</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the selected index.</comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Left property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>TooltipText</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the tooltip text that will appear when the mouse hovers over the control.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the node's tag. This is a placeholder for any object you need to tie to the node.</comment>
        </property>
        <property>
            <name>ContextMenu</name>
            <returntype>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</returntype>
            <parameter>
                <name>c</name>
                <type>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</type>
            </parameter>
            <comment>Gets or sets the context menu that will appear when the user right clicks on the control.</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node id. Returns an empty string if the id was not set.</comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred height.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>double</returntype>
            <comment>Gets the node width. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefWidth instead.</comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred width.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.LabelWrapper</name>
        <shortname>Label</shortname>
        <objectwrapper>javafx.scene.control.Label</objectwrapper>
        <owner>process</owner>
        <event>Resize (Width As Double, Height As Double)</event>
        <event>MouseClicked (EventData As MouseEvent)</event>
        <event>MouseMoved (EventData As MouseEvent)</event>
        <event>MouseDragged (EventData As MouseEvent)</event>
        <event>MousePressed (EventData As MouseEvent)</event>
        <event>MouseReleased (EventData As MouseEvent)</event>
        <event>FocusChanged (HasFocus As Boolean)</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object and sets the subs that will handle the events.
Nodes added with the designer should NOT be initialized. These views are initialized when the layout is loaded.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment>Requests the focus to be set on this node.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Snapshot</name>
            <comment>Captures the node appearance and returns the rendered image.</comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
        </method>
        <method>
            <name>RemoveNodeFromParent</name>
            <comment>Removes the node from its parent.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Top</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Top property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is enabled.</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is visible.</comment>
        </property>
        <property>
            <name>StyleClasses</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the node's style classes.</comment>
        </property>
        <property>
            <name>MouseCursor</name>
            <returntype>javafx.scene.Cursor</returntype>
            <parameter>
                <name>c</name>
                <type>javafx.scene.Cursor</type>
            </parameter>
            <comment>Gets or sets the mouse cursor that will be used when the mouse is in the node's bounds.
Example:&lt;code&gt;
MainForm.RootPane.MouseCursor = fx.Cursors.HAND&lt;/code&gt;</comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node inline style.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>double</returntype>
            <comment>Gets the node height. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefHeight instead.</comment>
        </property>
        <property>
            <name>TextColor</name>
            <returntype>javafx.scene.paint.Paint</returntype>
            <parameter>
                <name>Color</name>
                <type>javafx.scene.paint.Paint</type>
            </parameter>
            <comment>Gets or sets the text color.</comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Left property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Text</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the control text.</comment>
        </property>
        <property>
            <name>TooltipText</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the tooltip text that will appear when the mouse hovers over the control.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the node's tag. This is a placeholder for any object you need to tie to the node.</comment>
        </property>
        <property>
            <name>Font</name>
            <returntype>anywheresoftware.b4j.objects.JFX.FontWrapper</returntype>
            <parameter>
                <name>f</name>
                <type>anywheresoftware.b4j.objects.JFX.FontWrapper</type>
            </parameter>
            <comment>Gets or sets the control font.
Example: &lt;code&gt;
Button1.Font = fx.DefaultFont(14)&lt;/code&gt;</comment>
        </property>
        <property>
            <name>WrapText</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the text will be wrapped if it exceeds the node's width.</comment>
        </property>
        <property>
            <name>ContextMenu</name>
            <returntype>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</returntype>
            <parameter>
                <name>c</name>
                <type>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</type>
            </parameter>
            <comment>Gets or sets the context menu that will appear when the user right clicks on the control.</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node id. Returns an empty string if the id was not set.</comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred height.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>double</returntype>
            <comment>Gets the node width. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefWidth instead.</comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred width.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.JFX</name>
        <shortname>JFX</shortname>
        <comment>A class that holds utility methods related to JavaFX apps.</comment>
        <owner>process</owner>
        <method>
            <name>GetAllFontFamilies</name>
            <comment>Returns a list with all the installed font family names.</comment>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
        </method>
        <method>
            <name>LoadImage</name>
            <comment>Loads an image (similar to Image.Initialize).</comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>DefaultFont</name>
            <comment>Returns the system default font.</comment>
            <returntype>anywheresoftware.b4j.objects.JFX.FontWrapper</returntype>
            <parameter>
                <name>Size</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>LoadImageSample</name>
            <comment>Loads a resized image (similar to Image.InitializeSample).</comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>ShowExternalDocument</name>
            <comment>Tries to open the given Uri with the default app.
No error will be raised if the file cannot be opened.
Note that you cannot use this method with asset files. It will fail in release mode.
Example:&lt;code&gt;
fx.ShowExternalDocument(File.GetUri("C:\Users\H\Documents", "Document.pdf"))
fx.ShowExternalDocument("http://www.basic4ppc.com")&lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>DocUri</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>LoadFont</name>
            <comment>Loads a font resource from the given file. Returns an uninitialized font if loading has failed.
After the font was loaded you can call CreateFont with the font family name to create other variants of the given font.</comment>
            <returntype>anywheresoftware.b4j.objects.JFX.FontWrapper</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Size</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>CreateFont</name>
            <comment>Creates a new Font object.</comment>
            <returntype>anywheresoftware.b4j.objects.JFX.FontWrapper</returntype>
            <parameter>
                <name>FamilyName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Size</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Bold</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>Italic</name>
                <type>boolean</type>
            </parameter>
        </method>
        <property>
            <name>Screens</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with all the screens. Each element in the list is a Screen object.</comment>
        </property>
        <property>
            <name>PrimaryScreen</name>
            <returntype>anywheresoftware.b4j.objects.JFX.ScreenWrapper</returntype>
            <comment>Returns a Screen object that represents the primary screen.</comment>
        </property>
        <field>
            <name>Clipboard</name>
            <comment>Provides access to the OS Clipboard.</comment>
            <returntype>anywheresoftware.b4j.objects.JFX.ClipboardWrapper</returntype>
        </field>
        <field>
            <name>Colors</name>
            <comment></comment>
            <returntype>anywheresoftware.b4j.objects.JFX.Colors</returntype>
        </field>
        <field>
            <name>Cursors</name>
            <comment>Returns the available mouse cursors.</comment>
            <returntype>anywheresoftware.b4j.objects.JFX.Cursors</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.JFX.FontWrapper</name>
        <shortname>Font</shortname>
        <objectwrapper>javafx.scene.text.Font</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>FamilyName</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the font family name.</comment>
        </property>
        <property>
            <name>Size</name>
            <returntype>double</returntype>
            <comment>Gets the font size.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.JFX.Cursors</name>
        <owner>process</owner>
        <field>
            <name>CROSSHAIR</name>
            <comment></comment>
            <returntype>javafx.scene.Cursor</returntype>
        </field>
        <field>
            <name>HAND</name>
            <comment></comment>
            <returntype>javafx.scene.Cursor</returntype>
        </field>
        <field>
            <name>DISAPPEAR</name>
            <comment></comment>
            <returntype>javafx.scene.Cursor</returntype>
        </field>
        <field>
            <name>WAIT</name>
            <comment></comment>
            <returntype>javafx.scene.Cursor</returntype>
        </field>
        <field>
            <name>TEXT</name>
            <comment></comment>
            <returntype>javafx.scene.Cursor</returntype>
        </field>
        <field>
            <name>MOVE</name>
            <comment></comment>
            <returntype>javafx.scene.Cursor</returntype>
        </field>
        <field>
            <name>NONE</name>
            <comment></comment>
            <returntype>javafx.scene.Cursor</returntype>
        </field>
        <field>
            <name>OPEN_HAND</name>
            <comment></comment>
            <returntype>javafx.scene.Cursor</returntype>
        </field>
        <field>
            <name>CLOSED_HAND</name>
            <comment></comment>
            <returntype>javafx.scene.Cursor</returntype>
        </field>
        <field>
            <name>DEFAULT</name>
            <comment></comment>
            <returntype>javafx.scene.Cursor</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.JFX.Colors</name>
        <owner>process</owner>
        <method>
            <name>ARGB</name>
            <comment>Creates a new color from the three components and alpha level.
Values should be between 0 to 255.</comment>
            <returntype>javafx.scene.paint.Color</returntype>
            <parameter>
                <name>Alpha</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>R</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>G</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>B</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>To32Bit</name>
            <comment>Converts the color to a 32bit number (2 bytes for Alpha, R, G and B).</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Color</name>
                <type>javafx.scene.paint.Paint</type>
            </parameter>
        </method>
        <method>
            <name>From32Bit</name>
            <comment>Creates a new color from a 32bit number(2 bytes for Alpha, R , G and B).</comment>
            <returntype>javafx.scene.paint.Color</returntype>
            <parameter>
                <name>Color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>RGB</name>
            <comment>Creates a new color from the three color components.
Values should be between 0 to 255.</comment>
            <returntype>javafx.scene.paint.Color</returntype>
            <parameter>
                <name>R</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>G</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>B</name>
                <type>int</type>
            </parameter>
        </method>
        <field>
            <name>LightGray</name>
            <comment></comment>
            <returntype>javafx.scene.paint.Paint</returntype>
        </field>
        <field>
            <name>Blue</name>
            <comment></comment>
            <returntype>javafx.scene.paint.Paint</returntype>
        </field>
        <field>
            <name>White</name>
            <comment></comment>
            <returntype>javafx.scene.paint.Paint</returntype>
        </field>
        <field>
            <name>Red</name>
            <comment></comment>
            <returntype>javafx.scene.paint.Paint</returntype>
        </field>
        <field>
            <name>Black</name>
            <comment></comment>
            <returntype>javafx.scene.paint.Paint</returntype>
        </field>
        <field>
            <name>Transparent</name>
            <comment></comment>
            <returntype>javafx.scene.paint.Paint</returntype>
        </field>
        <field>
            <name>Green</name>
            <comment></comment>
            <returntype>javafx.scene.paint.Paint</returntype>
        </field>
        <field>
            <name>Magenta</name>
            <comment></comment>
            <returntype>javafx.scene.paint.Paint</returntype>
        </field>
        <field>
            <name>Yellow</name>
            <comment></comment>
            <returntype>javafx.scene.paint.Paint</returntype>
        </field>
        <field>
            <name>DarkGray</name>
            <comment></comment>
            <returntype>javafx.scene.paint.Paint</returntype>
        </field>
        <field>
            <name>Cyan</name>
            <comment></comment>
            <returntype>javafx.scene.paint.Paint</returntype>
        </field>
        <field>
            <name>Gray</name>
            <comment></comment>
            <returntype>javafx.scene.paint.Paint</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.JFX.PaintWrapper</name>
        <shortname>Paint</shortname>
        <comment>Paint object usually represent a color. It can however also represent other types of Paints.</comment>
        <objectwrapper>javafx.scene.paint.Paint</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.JFX.ScreenWrapper</name>
        <shortname>Screen</shortname>
        <comment>Represents a connected monitor.</comment>
        <objectwrapper>javafx.stage.Screen</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>MinY</name>
            <returntype>double</returntype>
            <comment>Returns the screen top boundary Y coordinate.</comment>
        </property>
        <property>
            <name>MinX</name>
            <returntype>double</returntype>
            <comment>Returns the screen left boundary X coordinate.</comment>
        </property>
        <property>
            <name>MaxY</name>
            <returntype>double</returntype>
            <comment>Returns the screen bottom boundary Y coordinate.</comment>
        </property>
        <property>
            <name>MaxX</name>
            <returntype>double</returntype>
            <comment>Returns the screen right boundary X coordinate.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.JFX.ClipboardWrapper</name>
        <comment>Allows you to get or set items from the system clipboard.
Use fx.Clipboard to access this object.</comment>
        <owner>process</owner>
        <method>
            <name>HasFiles</name>
            <comment>Checks whether there are files in the system clipboard.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetString</name>
            <comment>Gets a string from the system clipboard.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>GetFiles</name>
            <comment>Returns a list with the files paths.
Each item in the list is a full path to a file.</comment>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
        </method>
        <method>
            <name>SetImage</name>
            <comment>Copies the image to the system clipboard.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Img</name>
                <type>javafx.scene.image.Image</type>
            </parameter>
        </method>
        <method>
            <name>GetImage</name>
            <comment>Gets an image from the system clipboard.</comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
        </method>
        <method>
            <name>HasImage</name>
            <comment>Checks whether there is an image in the system clipboard.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>HasString</name>
            <comment>Checks whether there is a string set in the system clipboard.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SetFiles</name>
            <comment>Puts the files in the system clipboard.
Example:&lt;code&gt;
fx.Clipboard.SetFiles(Array As String(File.Combine(File.DirApp, "readme.txt")))&lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Files</name>
                <type>anywheresoftware.b4a.objects.collections.List</type>
            </parameter>
        </method>
        <method>
            <name>SetString</name>
            <comment>Copies the given string to the system clipboard.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Text</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.ImageViewWrapper</name>
        <shortname>ImageView</shortname>
        <comment>A node that displays an image.
The ImageView node will not be resized automatically when its parent is resized.</comment>
        <objectwrapper>javafx.scene.image.ImageView</objectwrapper>
        <owner>process</owner>
        <event>MouseClicked (EventData As MouseEvent)</event>
        <event>MouseMoved (EventData As MouseEvent)</event>
        <event>MouseDragged (EventData As MouseEvent)</event>
        <event>MousePressed (EventData As MouseEvent)</event>
        <event>MouseReleased (EventData As MouseEvent)</event>
        <event>FocusChanged (HasFocus As Boolean)</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object and sets the subs that will handle the events.
Nodes added with the designer should NOT be initialized. These views are initialized when the layout is loaded.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment>Requests the focus to be set on this node.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetImage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Image</name>
                <type>javafx.scene.image.Image</type>
            </parameter>
        </method>
        <method>
            <name>Snapshot</name>
            <comment>Captures the node appearance and returns the rendered image.</comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
        </method>
        <method>
            <name>GetImage</name>
            <comment>Gets or sets the ImageView image.</comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
        </method>
        <method>
            <name>RemoveNodeFromParent</name>
            <comment>Removes the node from its parent.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is enabled.</comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Top property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is visible.</comment>
        </property>
        <property>
            <name>MouseCursor</name>
            <returntype>javafx.scene.Cursor</returntype>
            <parameter>
                <name>c</name>
                <type>javafx.scene.Cursor</type>
            </parameter>
            <comment>Gets or sets the mouse cursor that will be used when the mouse is in the node's bounds.
Example:&lt;code&gt;
MainForm.RootPane.MouseCursor = fx.Cursors.HAND&lt;/code&gt;</comment>
        </property>
        <property>
            <name>StyleClasses</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the node's style classes.</comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node inline style.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the ImageView height.</comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Left property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the node's tag. This is a placeholder for any object you need to tie to the node.</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node id. Returns an empty string if the id was not set.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the ImageView width.</comment>
        </property>
        <property>
            <name>PreserveRatio</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether ImageView should preserve the image ratio.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</name>
        <shortname>Image</shortname>
        <comment>Image represents a graphical image.</comment>
        <objectwrapper>javafx.scene.image.Image</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Loads the image from the given directory.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>InitializeSample2</name>
            <comment>Loads a resized image from the given InputStream.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>In</name>
                <type>java.io.InputStream</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>WriteToStream</name>
            <comment>Writes the image to the OutputStream formatted as a PNG image.
The OutputStream will not be closed automatically.
Example:&lt;code&gt;Dim Out As OutputStream = File.OpenOutput(File.DirApp, "1.png")
Image1.WriteToStream(Out)
Out.Close&lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Out</name>
                <type>java.io.OutputStream</type>
            </parameter>
        </method>
        <method>
            <name>GetPixel</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Loads the image from the given InputStream.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>In</name>
                <type>java.io.InputStream</type>
            </parameter>
        </method>
        <method>
            <name>InitializeSample</name>
            <comment>Loads a resized image.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Height</name>
            <returntype>double</returntype>
            <comment>Returns the image height.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>double</returntype>
            <comment>Returns the image width.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.HTMLEditorWrapper</name>
        <shortname>HTMLEditor</shortname>
        <comment>HTMLEditor is a built-in text editor that is based on a Html engine.
HTMLEditor makes it easy for the user to format their text.</comment>
        <objectwrapper>javafx.scene.web.HTMLEditor</objectwrapper>
        <owner>process</owner>
        <event>Resize (Width As Double, Height As Double)</event>
        <event>MouseClicked (EventData As MouseEvent)</event>
        <event>MouseMoved (EventData As MouseEvent)</event>
        <event>MouseDragged (EventData As MouseEvent)</event>
        <event>MousePressed (EventData As MouseEvent)</event>
        <event>MouseReleased (EventData As MouseEvent)</event>
        <event>FocusChanged (HasFocus As Boolean)</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object and sets the subs that will handle the events.
Nodes added with the designer should NOT be initialized. These views are initialized when the layout is loaded.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment>Requests the focus to be set on this node.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Snapshot</name>
            <comment>Captures the node appearance and returns the rendered image.</comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
        </method>
        <method>
            <name>RemoveNodeFromParent</name>
            <comment>Removes the node from its parent.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Top</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Top property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is enabled.</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is visible.</comment>
        </property>
        <property>
            <name>MouseCursor</name>
            <returntype>javafx.scene.Cursor</returntype>
            <parameter>
                <name>c</name>
                <type>javafx.scene.Cursor</type>
            </parameter>
            <comment>Gets or sets the mouse cursor that will be used when the mouse is in the node's bounds.
Example:&lt;code&gt;
MainForm.RootPane.MouseCursor = fx.Cursors.HAND&lt;/code&gt;</comment>
        </property>
        <property>
            <name>StyleClasses</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the node's style classes.</comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node inline style.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>double</returntype>
            <comment>Gets the node height. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefHeight instead.</comment>
        </property>
        <property>
            <name>HtmlText</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the Html formatted text.</comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Left property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>TooltipText</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the tooltip text that will appear when the mouse hovers over the control.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the node's tag. This is a placeholder for any object you need to tie to the node.</comment>
        </property>
        <property>
            <name>ContextMenu</name>
            <returntype>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</returntype>
            <parameter>
                <name>c</name>
                <type>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</type>
            </parameter>
            <comment>Gets or sets the context menu that will appear when the user right clicks on the control.</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node id. Returns an empty string if the id was not set.</comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred height.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>double</returntype>
            <comment>Gets the node width. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefWidth instead.</comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred width.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.Form</name>
        <shortname>Form</shortname>
        <comment>A form or window. Form.RootPane returns the root container. You can add or remove nodes from this container.
Forms can be either modal or non-modal.
The main form 'EventName' is MainForm.</comment>
        <owner>process</owner>
        <event>CloseRequest (EventData As Event)</event>
        <event>Closed</event>
        <event>FocusChanged (HasFocus As Boolean)</event>
        <event>IconifiedChanged (Iconified As Boolean)</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes the form and set the subs that will handle the form events (including the RootPane events).
Pass -1 to the Width or Height if you want the form size to be calculated automatically based on its contents.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>Close</name>
            <comment>Closes the form.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetFormStyle</name>
            <comment>Sets the form style. 
The possible values are: 
DECORATED - Default style.
UNDECORATED - Window without decorations.
TRANSPARENT - Transparent window without decorations. 
UTILITY - Window with minimal decorations.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Style</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name RaisesSynchronousEvents="true">Show</name>
            <comment>Shows the form.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name RaisesSynchronousEvents="true">ShowAndWait</name>
            <comment>Shows the form as a modal form. The current code execution will wait until the form is closed.
Note that you cannot call this method if the form was shown before as a non-modal form.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetWindowSizeLimits</name>
            <comment>Sets the window maximum and minimum dimensions.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>MinWidth</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>MinHeight</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>MaxWidth</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>MaxHeight</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>SetOwner</name>
            <comment>Sets the form owner. This method should be called before the form is shown.
A form with an owner will appear above its owner.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Owner</name>
                <type>anywheresoftware.b4j.objects.Form</type>
            </parameter>
        </method>
        <property>
            <name>RootPane</name>
            <returntype>anywheresoftware.b4j.objects.PaneWrapper.AnchorPaneWrapper</returntype>
            <comment>Return the form root container, which is an AnchorPane.</comment>
        </property>
        <property>
            <name>WindowLeft</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the window left position.</comment>
        </property>
        <property>
            <name>WindowWidth</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the window width.</comment>
        </property>
        <property>
            <name>WindowTop</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the window top position.</comment>
        </property>
        <property>
            <name>Stylesheets</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the stylesheets files attached to this form.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>double</returntype>
            <comment>Gets the form internal height (without the title bar).</comment>
        </property>
        <property>
            <name>BackColor</name>
            <returntype>javafx.scene.paint.Paint</returntype>
            <parameter>
                <name>p</name>
                <type>javafx.scene.paint.Paint</type>
            </parameter>
            <comment>Gets or sets the form background fill.
Example:&lt;code&gt;
frm.BackColor = fx.Colors.White&lt;/code&gt;</comment>
        </property>
        <property>
            <name>Resizable</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether this form is resizable by the user.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>double</returntype>
            <comment>Gets the form internal width.</comment>
        </property>
        <property>
            <name>WindowHeight</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the window height.</comment>
        </property>
        <property>
            <name>Icon</name>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
            <parameter>
                <name>Image</name>
                <type>javafx.scene.image.Image</type>
            </parameter>
            <comment>Gets or sets the form icon.
Example:&lt;code&gt;
MainForm.Icon = fx.LoadImage(File.DirAssets, "image.png")&lt;/code&gt;</comment>
        </property>
        <property>
            <name>Title</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the form title.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.FileChooserWrapper</name>
        <shortname>FileChooser</shortname>
        <comment>A dialog that allows the user to choose one or more files.</comment>
        <objectwrapper>javafx.stage.FileChooser</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetExtensionFilter</name>
            <comment>Sets an extension filter. The chooser will only accept files that end with one of the specified extensions.
Example:&lt;code&gt;
fc.setExtensionFilter("Image", Array As String("*.jpg", "*.png"))&lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Description</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Extensions</name>
                <type>anywheresoftware.b4a.objects.collections.List</type>
            </parameter>
        </method>
        <method>
            <name RaisesSynchronousEvents="true">ShowSave</name>
            <comment>Shows the dialog. The user can either choose an existing or non-existing file.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Owner</name>
                <type>anywheresoftware.b4j.objects.Form</type>
            </parameter>
        </method>
        <method>
            <name RaisesSynchronousEvents="true">ShowOpenMultiple</name>
            <comment>Shows the dialog. The user can choose one or more files.
Returns an uninitialized list if the user has not chosen any file.</comment>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <parameter>
                <name>Owner</name>
                <type>anywheresoftware.b4j.objects.Form</type>
            </parameter>
        </method>
        <method>
            <name RaisesSynchronousEvents="true">ShowOpen</name>
            <comment>Shows the dialog. The user will be asked to choose a single, existing file.
Returns an empty string if no file was chosen.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Owner</name>
                <type>anywheresoftware.b4j.objects.Form</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>InitialDirectory</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the initial directory.</comment>
        </property>
        <property>
            <name>Title</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>title</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the dialog title.</comment>
        </property>
        <property>
            <name>InitialFileName</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the initial file name.
Relevant only in "save" dialogs.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.DirectoryChooserWrapper</name>
        <shortname>DirectoryChooser</shortname>
        <comment>A dialog that allows the user to choose a directory.</comment>
        <objectwrapper>javafx.stage.DirectoryChooser</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Show</name>
            <comment>Shows the modal dialog. Returns the selected directory or an empty string.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Owner</name>
                <type>anywheresoftware.b4j.objects.Form</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>InitialDirectory</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the initial directory.</comment>
        </property>
        <property>
            <name>Title</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>title</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the dialog title.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.ComboBoxWrapper</name>
        <shortname>ComboBox</shortname>
        <comment>ComboBox control. Allows the user to select a value from a dropdown list.
If the ComboBox is editable then the user can also write any value instead of selecting a predefined value.
SelectedIndexChanged event is raised when the selected index is changed. The Index will be -1 if there is no selection.
ValueChanged event is raised when the current value has changed. This event will be raised when the selected item has changed or
if the ComboBox is editable then it will be raised when the user has edited the value.</comment>
        <objectwrapper>javafx.scene.control.ComboBox</objectwrapper>
        <owner>process</owner>
        <event>ValueChanged (Value As Object)</event>
        <event>SelectedIndexChanged(Index As Int, Value As Object)</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object and sets the subs that will handle the events.
Nodes added with the designer should NOT be initialized. These views are initialized when the layout is loaded.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment>Requests the focus to be set on this node.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Snapshot</name>
            <comment>Captures the node appearance and returns the rendered image.</comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
        </method>
        <method>
            <name>RemoveNodeFromParent</name>
            <comment>Removes the node from its parent.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Items</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the items.</comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Top property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is enabled.</comment>
        </property>
        <property>
            <name>Value</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the current value.</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is visible.</comment>
        </property>
        <property>
            <name>StyleClasses</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the node's style classes.</comment>
        </property>
        <property>
            <name>MouseCursor</name>
            <returntype>javafx.scene.Cursor</returntype>
            <parameter>
                <name>c</name>
                <type>javafx.scene.Cursor</type>
            </parameter>
            <comment>Gets or sets the mouse cursor that will be used when the mouse is in the node's bounds.
Example:&lt;code&gt;
MainForm.RootPane.MouseCursor = fx.Cursors.HAND&lt;/code&gt;</comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node inline style.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>double</returntype>
            <comment>Gets the node height. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefHeight instead.</comment>
        </property>
        <property>
            <name>SelectedIndex</name>
            <returntype>int</returntype>
            <parameter>
                <name>i</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the selected index. A value of -1 means that there is no selected item.</comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Left property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Editable</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the ComboBox is editable. The default value is False.</comment>
        </property>
        <property>
            <name>TooltipText</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the tooltip text that will appear when the mouse hovers over the control.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the node's tag. This is a placeholder for any object you need to tie to the node.</comment>
        </property>
        <property>
            <name>ContextMenu</name>
            <returntype>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</returntype>
            <parameter>
                <name>c</name>
                <type>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</type>
            </parameter>
            <comment>Gets or sets the context menu that will appear when the user right clicks on the control.</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node id. Returns an empty string if the id was not set.</comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred height.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>double</returntype>
            <comment>Gets the node width. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefWidth instead.</comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred width.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.CheckboxWrapper</name>
        <shortname>CheckBox</shortname>
        <comment>Checkbox control. The CheckedChange event will be raised when the Checkbox is checked or unchecked.</comment>
        <objectwrapper>javafx.scene.control.CheckBox</objectwrapper>
        <owner>process</owner>
        <event>CheckedChange(Checked As Boolean)</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object and sets the subs that will handle the events.
Nodes added with the designer should NOT be initialized. These views are initialized when the layout is loaded.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment>Requests the focus to be set on this node.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Snapshot</name>
            <comment>Captures the node appearance and returns the rendered image.</comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
        </method>
        <method>
            <name>RemoveNodeFromParent</name>
            <comment>Removes the node from its parent.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Top</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Top property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is enabled.</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is visible.</comment>
        </property>
        <property>
            <name>StyleClasses</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the node's style classes.</comment>
        </property>
        <property>
            <name>MouseCursor</name>
            <returntype>javafx.scene.Cursor</returntype>
            <parameter>
                <name>c</name>
                <type>javafx.scene.Cursor</type>
            </parameter>
            <comment>Gets or sets the mouse cursor that will be used when the mouse is in the node's bounds.
Example:&lt;code&gt;
MainForm.RootPane.MouseCursor = fx.Cursors.HAND&lt;/code&gt;</comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node inline style.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>double</returntype>
            <comment>Gets the node height. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefHeight instead.</comment>
        </property>
        <property>
            <name>TextColor</name>
            <returntype>javafx.scene.paint.Paint</returntype>
            <parameter>
                <name>Color</name>
                <type>javafx.scene.paint.Paint</type>
            </parameter>
            <comment>Gets or sets the text color.</comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Left property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Text</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the control text.</comment>
        </property>
        <property>
            <name>TooltipText</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the tooltip text that will appear when the mouse hovers over the control.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the node's tag. This is a placeholder for any object you need to tie to the node.</comment>
        </property>
        <property>
            <name>Checked</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets the checked state.</comment>
        </property>
        <property>
            <name>Font</name>
            <returntype>anywheresoftware.b4j.objects.JFX.FontWrapper</returntype>
            <parameter>
                <name>f</name>
                <type>anywheresoftware.b4j.objects.JFX.FontWrapper</type>
            </parameter>
            <comment>Gets or sets the control font.
Example: &lt;code&gt;
Button1.Font = fx.DefaultFont(14)&lt;/code&gt;</comment>
        </property>
        <property>
            <name>WrapText</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the text will be wrapped if it exceeds the node's width.</comment>
        </property>
        <property>
            <name>ContextMenu</name>
            <returntype>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</returntype>
            <parameter>
                <name>c</name>
                <type>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</type>
            </parameter>
            <comment>Gets or sets the context menu that will appear when the user right clicks on the control.</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node id. Returns an empty string if the id was not set.</comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred height.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>double</returntype>
            <comment>Gets the node width. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefWidth instead.</comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred width.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.CanvasWrapper</name>
        <shortname>Canvas</shortname>
        <comment>A special node that can be drawn on.
The Canvas node will not be resized automatically when its parent is resized.</comment>
        <objectwrapper>javafx.scene.canvas.Canvas</objectwrapper>
        <owner>process</owner>
        <event>MouseClicked (EventData As MouseEvent)</event>
        <event>MouseMoved (EventData As MouseEvent)</event>
        <event>MouseDragged (EventData As MouseEvent)</event>
        <event>MousePressed (EventData As MouseEvent)</event>
        <event>MouseReleased (EventData As MouseEvent)</event>
        <event>FocusChanged (HasFocus As Boolean)</event>
        <method>
            <name>DrawLine</name>
            <comment>Draws a line from (x1, y1) to (x2, y2).</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x1</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>y1</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>x2</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>y2</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Paint</name>
                <type>javafx.scene.paint.Paint</type>
            </parameter>
            <parameter>
                <name>StrokeWidth</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>DrawImage2</name>
            <comment>Similar to DrawImage. Allows you to set both the source rectangle dimensions (in the image) and the destination rectangle dimensions.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Image</name>
                <type>javafx.scene.image.Image</type>
            </parameter>
            <parameter>
                <name>SourceX</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>SourceY</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>SourceWidth</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>SourceHeight</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>DestX</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>DestY</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>DestWidth</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>DestHeight</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment>Requests the focus to be set on this node.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>DrawTextRotated</name>
            <comment>Similar to DrawText. Rotates the text before it is drawn.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Font</name>
                <type>javafx.scene.text.Font</type>
            </parameter>
            <parameter>
                <name>Paint</name>
                <type>javafx.scene.paint.Paint</type>
            </parameter>
            <parameter>
                <name>Alignment</name>
                <type EnumType="true">javafx.scene.text.TextAlignment</type>
            </parameter>
            <parameter>
                <name>Degree</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>DrawText2</name>
            <comment>Similar to DrawText. MaxWidth defines the text bounds. The text will be wrapped if it is longer.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Font</name>
                <type>javafx.scene.text.Font</type>
            </parameter>
            <parameter>
                <name>Paint</name>
                <type>javafx.scene.paint.Paint</type>
            </parameter>
            <parameter>
                <name>Alignment</name>
                <type EnumType="true">javafx.scene.text.TextAlignment</type>
            </parameter>
            <parameter>
                <name>MaxWidth</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>Snapshot</name>
            <comment>Captures the node appearance and returns the rendered image.</comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
        </method>
        <method>
            <name>DrawImageRotated</name>
            <comment>Similar to DrawImage. Rotates the image before it is drawn.
Degree - Angle of rotation (measured in degrees).</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Image</name>
                <type>javafx.scene.image.Image</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Degree</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>DrawRectRotated</name>
            <comment>Similar to DrawRect. Draws a rotated rectangle.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Paint</name>
                <type>javafx.scene.paint.Paint</type>
            </parameter>
            <parameter>
                <name>Filled</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>StrokeWidth</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Degree</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>RemoveClip</name>
            <comment>Removes a previously set clip region.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>DrawText</name>
            <comment>Draws the text.
Text - The text that will be drawn.
x - The origin X coordinate.
y - The origin Y coordinate.
Font - The text font.
Paint - Drawing color.
TextAlignment - Sets the alignment relative to the origin. One of the following values: LEFT, CENTER, RIGHT.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Font</name>
                <type>javafx.scene.text.Font</type>
            </parameter>
            <parameter>
                <name>Paint</name>
                <type>javafx.scene.paint.Paint</type>
            </parameter>
            <parameter>
                <name>Alignment</name>
                <type EnumType="true">javafx.scene.text.TextAlignment</type>
            </parameter>
        </method>
        <method>
            <name>ClearRect</name>
            <comment>Clears the drawings in the given rectangle.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>RemoveNodeFromParent</name>
            <comment>Removes the node from its parent.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>DrawCircle</name>
            <comment>Draws a circle.
x - The center X coordinate.
y - The center Y coordinate.
Radius - The circle radius.
Paint - The circle fill or stroke paint.
Filled - Whether the circle will be filled or not.
StrokeWidth - The circle stroke width (when Filled is False).</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Radius</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Paint</name>
                <type>javafx.scene.paint.Paint</type>
            </parameter>
            <parameter>
                <name>Filled</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>StrokeWidth</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object and sets the subs that will handle the events.
Nodes added with the designer should NOT be initialized. These views are initialized when the layout is loaded.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>DrawImage</name>
            <comment>Draws an image on the canvas.
Image - The image that will be drawn.
x - The top left corner x coordinate.
y - The top left corner y coordinate.
Width - The width of the destination rectangle.
Height - The height of the destination rectangle.
Example:&lt;code&gt;
cvs.DrawImage(image1, 10dip, 10dip, image1.Width, image1.Height)&lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Image</name>
                <type>javafx.scene.image.Image</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name>ClipPath</name>
            <comment>Clips the drawings to a closed path.
Points - A list with the path points. Each item in the list should be an array of doubles with the X and Y coordinates.
For example:&lt;code&gt;
Dim Path As List
Path.Initialize
Path.Add(Array As Double(100, 100))
Path.Add(Array As Double(100, 200))
Path.Add(Array As Double(200, 200))
cvs.ClipPath(Path)&lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Points</name>
                <type>anywheresoftware.b4a.objects.collections.List</type>
            </parameter>
        </method>
        <method>
            <name>DrawRect</name>
            <comment>Draws a rectangle.
x - Top left corner X coordinate.
y - Top left corner Y coordinate.
Width - The rectangle width.
Height - The rectangle height.
Paint - The rectangle fill or stroke paint.
Filled - Whether the rectangle should be filled.
StrokeWidth - The rectangle stroke (when Filled is False).</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Paint</name>
                <type>javafx.scene.paint.Paint</type>
            </parameter>
            <parameter>
                <name>Filled</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>StrokeWidth</name>
                <type>double</type>
            </parameter>
        </method>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is enabled.</comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Top property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is visible.</comment>
        </property>
        <property>
            <name>MouseCursor</name>
            <returntype>javafx.scene.Cursor</returntype>
            <parameter>
                <name>c</name>
                <type>javafx.scene.Cursor</type>
            </parameter>
            <comment>Gets or sets the mouse cursor that will be used when the mouse is in the node's bounds.
Example:&lt;code&gt;
MainForm.RootPane.MouseCursor = fx.Cursors.HAND&lt;/code&gt;</comment>
        </property>
        <property>
            <name>StyleClasses</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the node's style classes.</comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node inline style.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the canvas height.</comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Left property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the node's tag. This is a placeholder for any object you need to tie to the node.</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node id. Returns an empty string if the id was not set.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the canvas width.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.ButtonWrapper</name>
        <shortname>Button</shortname>
        <objectwrapper>javafx.scene.control.Button</objectwrapper>
        <owner>process</owner>
        <event>Action</event>
        <event>Resize (Width As Double, Height As Double)</event>
        <event>MouseClicked (EventData As MouseEvent)</event>
        <event>MouseMoved (EventData As MouseEvent)</event>
        <event>MouseDragged (EventData As MouseEvent)</event>
        <event>MousePressed (EventData As MouseEvent)</event>
        <event>MouseReleased (EventData As MouseEvent)</event>
        <event>FocusChanged (HasFocus As Boolean)</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object and sets the subs that will handle the events.
Nodes added with the designer should NOT be initialized. These views are initialized when the layout is loaded.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment>Requests the focus to be set on this node.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Snapshot</name>
            <comment>Captures the node appearance and returns the rendered image.</comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
        </method>
        <method>
            <name>RemoveNodeFromParent</name>
            <comment>Removes the node from its parent.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Top</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Top property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is enabled.</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is visible.</comment>
        </property>
        <property>
            <name>StyleClasses</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the node's style classes.</comment>
        </property>
        <property>
            <name>MouseCursor</name>
            <returntype>javafx.scene.Cursor</returntype>
            <parameter>
                <name>c</name>
                <type>javafx.scene.Cursor</type>
            </parameter>
            <comment>Gets or sets the mouse cursor that will be used when the mouse is in the node's bounds.
Example:&lt;code&gt;
MainForm.RootPane.MouseCursor = fx.Cursors.HAND&lt;/code&gt;</comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node inline style.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>double</returntype>
            <comment>Gets the node height. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefHeight instead.</comment>
        </property>
        <property>
            <name>TextColor</name>
            <returntype>javafx.scene.paint.Paint</returntype>
            <parameter>
                <name>Color</name>
                <type>javafx.scene.paint.Paint</type>
            </parameter>
            <comment>Gets or sets the text color.</comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Left property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Text</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the control text.</comment>
        </property>
        <property>
            <name>TooltipText</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the tooltip text that will appear when the mouse hovers over the control.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the node's tag. This is a placeholder for any object you need to tie to the node.</comment>
        </property>
        <property>
            <name>Font</name>
            <returntype>anywheresoftware.b4j.objects.JFX.FontWrapper</returntype>
            <parameter>
                <name>f</name>
                <type>anywheresoftware.b4j.objects.JFX.FontWrapper</type>
            </parameter>
            <comment>Gets or sets the control font.
Example: &lt;code&gt;
Button1.Font = fx.DefaultFont(14)&lt;/code&gt;</comment>
        </property>
        <property>
            <name>WrapText</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the text will be wrapped if it exceeds the node's width.</comment>
        </property>
        <property>
            <name>ContextMenu</name>
            <returntype>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</returntype>
            <parameter>
                <name>c</name>
                <type>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</type>
            </parameter>
            <comment>Gets or sets the context menu that will appear when the user right clicks on the control.</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node id. Returns an empty string if the id was not set.</comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred height.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>double</returntype>
            <comment>Gets the node width. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefWidth instead.</comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred width.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.ButtonWrapper.ToggleButtonWrapper</name>
        <shortname>ToggleButton</shortname>
        <objectwrapper>javafx.scene.control.ToggleButton</objectwrapper>
        <owner>process</owner>
        <event>SelectedChange(Selected As Boolean)</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object and sets the subs that will handle the events.
Nodes added with the designer should NOT be initialized. These views are initialized when the layout is loaded.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment>Requests the focus to be set on this node.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Snapshot</name>
            <comment>Captures the node appearance and returns the rendered image.</comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
        </method>
        <method>
            <name>RemoveNodeFromParent</name>
            <comment>Removes the node from its parent.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Top</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Top property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is enabled.</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is visible.</comment>
        </property>
        <property>
            <name>StyleClasses</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the node's style classes.</comment>
        </property>
        <property>
            <name>MouseCursor</name>
            <returntype>javafx.scene.Cursor</returntype>
            <parameter>
                <name>c</name>
                <type>javafx.scene.Cursor</type>
            </parameter>
            <comment>Gets or sets the mouse cursor that will be used when the mouse is in the node's bounds.
Example:&lt;code&gt;
MainForm.RootPane.MouseCursor = fx.Cursors.HAND&lt;/code&gt;</comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node inline style.</comment>
        </property>
        <property>
            <name>Selected</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the button is selected (pressed).</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>double</returntype>
            <comment>Gets the node height. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefHeight instead.</comment>
        </property>
        <property>
            <name>TextColor</name>
            <returntype>javafx.scene.paint.Paint</returntype>
            <parameter>
                <name>Color</name>
                <type>javafx.scene.paint.Paint</type>
            </parameter>
            <comment>Gets or sets the text color.</comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Left property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Text</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the control text.</comment>
        </property>
        <property>
            <name>TooltipText</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the tooltip text that will appear when the mouse hovers over the control.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the node's tag. This is a placeholder for any object you need to tie to the node.</comment>
        </property>
        <property>
            <name>Font</name>
            <returntype>anywheresoftware.b4j.objects.JFX.FontWrapper</returntype>
            <parameter>
                <name>f</name>
                <type>anywheresoftware.b4j.objects.JFX.FontWrapper</type>
            </parameter>
            <comment>Gets or sets the control font.
Example: &lt;code&gt;
Button1.Font = fx.DefaultFont(14)&lt;/code&gt;</comment>
        </property>
        <property>
            <name>WrapText</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the text will be wrapped if it exceeds the node's width.</comment>
        </property>
        <property>
            <name>ContextMenu</name>
            <returntype>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</returntype>
            <parameter>
                <name>c</name>
                <type>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</type>
            </parameter>
            <comment>Gets or sets the context menu that will appear when the user right clicks on the control.</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node id. Returns an empty string if the id was not set.</comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred height.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>double</returntype>
            <comment>Gets the node width. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefWidth instead.</comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred width.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4j.objects.ButtonWrapper.RadioButtonWrapper</name>
        <shortname>RadioButton</shortname>
        <comment>RadioButtons can be either selected or not selected. When the RadioButtons are grouped then only one item can be selected at any time.
Call GroupRadioButtons to group a list of RadioButtons.</comment>
        <objectwrapper>javafx.scene.control.RadioButton</objectwrapper>
        <owner>process</owner>
        <event>SelectedChange(Selected As Boolean)</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object and sets the subs that will handle the events.
Nodes added with the designer should NOT be initialized. These views are initialized when the layout is loaded.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GroupRadioButtons</name>
            <comment>Creates a group from the RadioButtons that are stored in the list.
Only one of the group buttons can be selected at any time.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>RadioButtons</name>
                <type>anywheresoftware.b4a.objects.collections.List</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment>Requests the focus to be set on this node.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Snapshot</name>
            <comment>Captures the node appearance and returns the rendered image.</comment>
            <returntype>anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper</returntype>
        </method>
        <method>
            <name>RemoveNodeFromParent</name>
            <comment>Removes the node from its parent.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Top</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Top property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is enabled.</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the node is visible.</comment>
        </property>
        <property>
            <name>StyleClasses</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns a List with the node's style classes.</comment>
        </property>
        <property>
            <name>MouseCursor</name>
            <returntype>javafx.scene.Cursor</returntype>
            <parameter>
                <name>c</name>
                <type>javafx.scene.Cursor</type>
            </parameter>
            <comment>Gets or sets the mouse cursor that will be used when the mouse is in the node's bounds.
Example:&lt;code&gt;
MainForm.RootPane.MouseCursor = fx.Cursors.HAND&lt;/code&gt;</comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node inline style.</comment>
        </property>
        <property>
            <name>Selected</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the button is selected (pressed).</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>double</returntype>
            <comment>Gets the node height. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefHeight instead.</comment>
        </property>
        <property>
            <name>TextColor</name>
            <returntype>javafx.scene.paint.Paint</returntype>
            <parameter>
                <name>Color</name>
                <type>javafx.scene.paint.Paint</type>
            </parameter>
            <comment>Gets or sets the text color.</comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the Left property of the node (related to its parent).</comment>
        </property>
        <property>
            <name>Text</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the control text.</comment>
        </property>
        <property>
            <name>TooltipText</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the tooltip text that will appear when the mouse hovers over the control.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the node's tag. This is a placeholder for any object you need to tie to the node.</comment>
        </property>
        <property>
            <name>Font</name>
            <returntype>anywheresoftware.b4j.objects.JFX.FontWrapper</returntype>
            <parameter>
                <name>f</name>
                <type>anywheresoftware.b4j.objects.JFX.FontWrapper</type>
            </parameter>
            <comment>Gets or sets the control font.
Example: &lt;code&gt;
Button1.Font = fx.DefaultFont(14)&lt;/code&gt;</comment>
        </property>
        <property>
            <name>WrapText</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the text will be wrapped if it exceeds the node's width.</comment>
        </property>
        <property>
            <name>ContextMenu</name>
            <returntype>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</returntype>
            <parameter>
                <name>c</name>
                <type>anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper</type>
            </parameter>
            <comment>Gets or sets the context menu that will appear when the user right clicks on the control.</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>s</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the node id. Returns an empty string if the id was not set.</comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred height.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>double</returntype>
            <comment>Gets the node width. This value will only be available after the node's parent has finished measuring and drawing the node.
Consider using PrefWidth instead.</comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>double</returntype>
            <parameter>
                <name>d</name>
                <type>double</type>
            </parameter>
            <comment>Gets or sets the control preferred width.</comment>
        </property>
    </class>
    <version>2.01</version>
</root>
